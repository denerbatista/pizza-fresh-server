var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.29,1,2.425]],["body/controllers/AppController.html",[0,1.693,1,3.183,2,1.224,3,0.275,4,0.248,5,0.171,6,2.878,7,0.491,8,1.596,9,3.981,10,3.379,11,4.734,12,1.224,13,0.023,14,2.104,15,2.911,16,5.347,17,4.276,18,6.278,19,0.562,20,3.379,21,4.674,22,3.981,23,4.674,24,2.911,25,3.981,26,2.911,27,6.278,28,3.767,29,2.684,30,3.981,31,4.674,32,1.027,33,0.814,34,0.491,35,0.863,36,1.154,37,5.782,38,4.564,39,1.505,40,0.619,41,0.723,42,2.684,43,1.941,44,0.969,45,3.077,46,2.878,47,3.379,48,0.275,49,0.082,50,1.381,51,1.299,52,2.104,53,1.941,54,3.379,55,1.677,56,2.878,57,3.379,58,3.379,59,1.154,60,3.379,61,0.015,62,0.015]],["title/modules/AppModule.html",[63,1.216,64,2.425]],["body/modules/AppModule.html",[1,3.721,2,1.736,3,0.286,4,0.257,5,0.177,13,0.023,40,0.719,41,0.75,45,3.646,46,2.986,48,0.286,49,0.085,61,0.015,62,0.015,63,1.637,64,4.848,65,1.525,66,1.959,67,2.986,68,2.986,69,2.986,70,3.954,71,3.954,72,2.762,73,3.954,74,3.954,75,3.954,76,2.38,77,1.74,78,1.627,79,3.506,80,2.554,81,2.753,82,3.506,83,3.506,84,3.506,85,3.506,86,3.506,87,3.506,88,3.506]],["title/injectables/AppService.html",[45,2.045,89,1.021]],["body/injectables/AppService.html",[3,0.366,4,0.33,5,0.227,7,0.652,8,1.926,9,4.804,13,0.023,16,4.804,19,0.747,32,1.365,33,1.082,34,0.652,35,1.147,39,1.447,40,0.481,41,0.961,45,3.239,48,0.366,49,0.109,56,4.804,59,1.533,61,0.018,62,0.018,89,1.618,90,2.085,91,3.826,92,5.64,93,1.702,94,4.492,95,4.804,96,4.492,97,4.492,98,4.492]],["title/controllers/AuthController.html",[0,1.29,99,2.425]],["body/controllers/AuthController.html",[0,1.178,2,1.178,3,0.265,4,0.239,5,0.164,7,0.472,8,1.554,12,1.648,13,0.023,19,0.757,25,3.876,26,2.834,28,2.614,32,1.383,33,1.096,34,0.661,35,1.162,39,1.466,40,0.696,41,0.695,42,3.015,43,1.868,44,0.933,48,0.265,49,0.079,50,1.329,51,1.25,53,2.614,59,1.554,61,0.014,62,0.014,99,3.1,100,2.77,101,2.025,102,3.252,103,3.873,104,4.551,105,2.77,106,3.863,107,3.252,108,4.551,109,4.551,110,3.432,111,4.551,112,3.252,113,2.614,114,3.252,115,2.353,116,3.252,117,2.425,118,2.614,119,3.432,120,3.252,121,3.252,122,1.868,123,2.215,124,2.215,125,2.834,126,2.025,127,2.025,128,1.329,129,2.834,130,2.215,131,3.015,132,2.77,133,2.025,134,2.77,135,2.77,136,2.77,137,2.215,138,3.252,139,2.77,140,3.252,141,3.252,142,3.252,143,3.252,144,3.252,145,2.025,146,3.252,147,3.252]],["title/modules/AuthModule.html",[63,1.216,70,2.218]],["body/modules/AuthModule.html",[2,1.834,3,0.31,4,0.279,5,0.192,13,0.023,40,0.711,41,0.813,48,0.31,49,0.092,61,0.016,62,0.016,63,1.729,65,1.654,66,2.07,70,4.293,72,2.829,76,2.514,77,1.888,78,1.765,80,2.698,81,2.908,99,3.878,128,1.554,131,3.734,132,3.238,148,3.238,149,3.802,150,3.238,151,4.05,152,3.802,153,3.802,154,2.368,155,3.802,156,3.238,157,2.368,158,3.802,159,2.368,160,2.368,161,2.026,162,3.802,163,3.802,164,3.238,165,3.802,166,3.802,167,3.802]],["title/injectables/AuthService.html",[89,1.021,131,2.045]],["body/injectables/AuthService.html",[3,0.261,4,0.235,5,0.162,7,0.465,8,1.536,13,0.023,19,0.749,24,1.993,32,1.368,33,1.084,34,0.654,35,1.149,39,1.031,40,0.661,41,0.684,48,0.261,49,0.078,51,1.73,55,2.584,59,1.093,61,0.014,62,0.014,89,1.291,90,1.486,103,3.065,105,3.833,106,3.844,110,2.413,113,2.585,115,2.045,117,2.398,131,2.585,133,1.993,134,2.726,135,2.726,136,2.726,156,2.726,168,2.726,169,2.773,170,2.585,171,1.838,172,2.308,173,6.34,174,3.201,175,2.234,176,3.201,177,2.726,178,3.393,179,1.838,180,3.393,181,3.009,182,1.838,183,3.201,184,3.201,185,4.5,186,2.726,187,3.201,188,2.398,189,2.413,190,2.803,191,2.089,192,4.5,193,4.5,194,3.925,195,4.5,196,3.201,197,3.201,198,3.201,199,4.5,200,3.201,201,3.393,202,1.486,203,3.201]],["title/classes/CreateOrderDto.html",[49,0.087,204,2.218]],["body/classes/CreateOrderDto.html",[3,0.291,4,0.263,5,0.181,7,0.52,12,1.76,13,0.022,17,3.311,19,0.809,29,2.792,34,0.928,36,1.66,40,0.634,44,1.026,48,0.291,49,0.134,61,0.015,62,0.015,117,2.59,204,3.027,205,1.152,206,4.163,207,3.047,208,1.66,209,3.438,210,5.521,211,4.218,212,3.578,213,3.578,214,4.861,215,3.311,216,4.861,217,4.861,218,4.14,219,5.923,220,4.861,221,4.466,222,3.047,223,3.578,224,2.413,225,3.047,226,4.14,227,3.665,228,4.14,229,4.861,230,2.256,231,3.311,232,3.578,233,2.941,234,3.047,235,4.14,236,3.665,237,4.861,238,1.906,239,1.152,240,2.055,241,2.437,242,3.578,243,2.698]],["title/classes/CreateOrderProductDto.html",[49,0.087,211,2.425]],["body/classes/CreateOrderProductDto.html",[3,0.293,4,0.264,5,0.182,7,0.523,12,2.005,13,0.022,19,0.921,28,2.803,34,0.804,36,2.185,40,0.523,44,1.032,48,0.293,49,0.119,61,0.015,62,0.015,93,1.516,205,1.159,206,4.477,208,1.666,211,3.324,221,3.68,224,2.423,225,3.066,230,2.97,231,3.324,233,3.163,235,4.157,236,3.68,238,1.918,240,3.41,244,2.451,245,4.716,246,4.716,247,2.714,248,4.881,249,4.477,250,4.881,251,4.881,252,3.599,253,3.599,254,1.767,255,4.881,256,4.881,257,4.881,258,4.881,259,4.881,260,3.066,261,4.881,262,4.881,263,3.066,264,3.324,265,4.881]],["title/classes/CreateProductDto.html",[49,0.087,266,2.045]],["body/classes/CreateProductDto.html",[3,0.267,4,0.241,5,0.165,7,0.476,12,2.067,13,0.022,19,0.949,24,2.851,28,3.278,33,1.27,34,0.829,36,2.179,40,0.49,44,0.94,48,0.267,49,0.111,61,0.014,62,0.014,93,1.588,205,1.056,208,1.563,224,2.272,230,3.022,233,3.199,238,1.747,244,2.233,247,3.451,249,4.909,260,2.792,263,2.792,264,3.591,266,2.629,267,5.113,268,2.809,269,3.591,270,4.577,271,3.898,272,4.861,273,4.861,274,3.898,275,3.898,276,3.898,277,3.898,278,3.898,279,2.792,280,3.898,281,3.898,282,3.278,283,3.898,284,3.898,285,3.278,286,3.278,287,4.577,288,3.898,289,3.278,290,3.898,291,3.898,292,3.278,293,2.792]],["title/classes/CreateTableDto.html",[49,0.087,294,2.045]],["body/classes/CreateTableDto.html",[3,0.365,4,0.328,5,0.226,7,0.65,12,1.621,13,0.022,17,3.833,19,0.744,34,0.65,36,1.528,40,0.603,44,1.284,48,0.365,49,0.137,61,0.017,62,0.017,117,2.998,205,1.441,208,1.921,224,3.304,226,4.793,227,4.243,230,2.612,231,3.833,233,2.998,236,4.243,238,2.384,290,4.793,294,3.232,295,4.793,296,3.374,297,4.475,298,4.475]],["title/classes/CreateUserDto.html",[49,0.087,299,2.045]],["body/classes/CreateUserDto.html",[3,0.235,4,0.211,5,0.145,7,0.418,12,2.07,13,0.022,17,2.844,19,0.951,28,3.092,33,1.183,34,0.83,36,1.951,40,0.447,44,0.826,48,0.235,49,0.102,61,0.013,62,0.013,93,1.664,103,3.667,118,3.616,181,2.616,182,2.82,194,4.747,205,0.928,208,1.425,230,3.024,233,3.175,238,1.535,247,3.148,264,3.667,268,2.616,279,2.454,280,3.556,283,4.586,291,3.556,299,2.398,300,5.076,301,2.173,302,4.91,303,2.454,304,4.175,305,5.384,306,5.384,307,4.175,308,4.06,309,2.881,310,4.175,311,3.556,312,2.881,313,4.175,314,5.384,315,4.175,316,3.148,317,3.148,318,2.881,319,4.175,320,4.175,321,3.556,322,2.881,323,2.881,324,4.175,325,4.175,326,4.175,327,4.175,328,2.881,329,2.881,330,2.881,331,2.881,332,2.881,333,2.881,334,2.881]],["title/injectables/JwtStrategy.html",[89,1.021,151,2.218]],["body/injectables/JwtStrategy.html",[3,0.294,4,0.265,5,0.182,7,0.524,8,1.67,13,0.023,19,0.813,32,1.486,33,1.178,34,0.863,35,1.249,39,1.163,40,0.637,41,0.772,48,0.294,49,0.088,50,1.475,51,1.388,55,1.792,59,1.232,61,0.015,62,0.015,89,1.403,90,1.676,93,0.922,115,2.008,118,2.073,119,2.722,128,1.475,151,3.046,161,1.923,164,3.075,169,2.955,170,2.073,171,2.073,172,2.429,175,2.428,177,4.165,179,2.073,181,2.605,186,3.075,188,1.923,189,2.722,190,2.248,191,1.676,201,2.722,202,1.676,228,3.075,335,3.075,336,4.89,337,3.61,338,4.89,339,4.89,340,3.61,341,3.61,342,3.61,343,3.61,344,3.61,345,3.61,346,3.61,347,2.248,348,3.61,349,3.61,350,3.61,351,3.61,352,3.61,353,3.075,354,3.61,355,3.61,356,3.331,357,3.61]],["title/classes/LoginDto.html",[49,0.087,106,2.218]],["body/classes/LoginDto.html",[3,0.341,4,0.307,5,0.211,7,0.607,12,1.952,13,0.022,19,0.897,34,0.783,36,1.84,40,0.577,44,1.199,48,0.341,49,0.131,61,0.017,62,0.017,93,1.609,106,3.357,118,3.618,181,3.473,182,3.425,194,4.064,205,1.347,208,1.84,230,2.924,233,3.177,238,2.228,264,4.062,308,4.064,358,3.562,359,5.39,360,5.39,361,4.182,362,4.182,363,5.964]],["title/classes/LoginResponseDto.html",[49,0.087,133,2.218]],["body/classes/LoginResponseDto.html",[3,0.342,4,0.308,5,0.212,7,0.609,12,1.956,13,0.022,19,0.899,34,0.784,36,1.844,40,0.579,44,1.204,48,0.342,49,0.102,61,0.017,62,0.017,93,1.38,103,3.679,110,4.504,115,2.419,118,3.102,119,4.073,130,2.858,133,3.364,161,2.878,205,1.351,208,1.844,230,2.507,233,3.183,303,4.601,364,5.088,365,3.574,366,5.402,367,3.364,368,5.402,369,4.197,370,5.402,371,4.197]],["title/classes/Order.html",[49,0.087,240,2.045]],["body/classes/Order.html",[3,0.32,4,0.288,5,0.198,7,0.57,13,0.022,19,1.091,34,0.953,35,1.796,40,0.619,48,0.32,49,0.095,61,0.016,62,0.016,93,1.321,115,2.376,130,2.673,205,1.264,208,1.766,209,3.602,240,2.97,254,2.095,372,3.343,373,3.602,374,3.257,375,3.602,376,3.829,377,3.925,378,3.925,379,2.871,380,3.925,381,3.925,382,3.925,383,3.925,384,3.925,385,3.925]],["title/controllers/OrderController.html",[0,1.29,386,2.425]],["body/controllers/OrderController.html",[0,1.126,2,1.126,3,0.253,4,0.228,5,0.157,7,0.452,8,1.506,12,1.856,13,0.023,14,1.937,15,2.747,19,0.852,26,3.473,32,1.34,33,1.062,34,0.641,35,1.126,39,1.65,40,0.673,41,0.665,42,3.202,43,1.786,44,0.892,48,0.253,49,0.076,50,1.271,51,1.196,52,1.937,53,2.943,59,1.749,61,0.014,62,0.014,93,1.309,101,1.937,115,2.214,122,2.533,125,2.747,126,1.937,127,1.937,128,1.271,129,2.747,130,2.118,137,2.118,139,2.649,145,1.937,204,4.001,215,3.004,221,4.204,239,1.42,240,1.786,254,2.019,367,2.747,386,3.004,387,2.649,388,2.768,389,2.19,390,3.11,391,2.118,392,3.004,393,3.11,394,3.004,395,3.326,396,4.411,397,3.11,398,1.544,399,2.118,400,3.11,401,2.345,402,1.544,403,2.649,404,2.943,405,2.649,406,3.11,407,3.11,408,3.11,409,3.11,410,3.11,411,2.118,412,2.118,413,3.11]],["title/modules/OrderModule.html",[63,1.216,71,2.218]],["body/modules/OrderModule.html",[2,1.952,3,0.341,4,0.307,5,0.211,13,0.022,40,0.698,41,0.894,48,0.341,49,0.102,61,0.017,62,0.017,63,1.84,65,1.82,66,2.203,71,4.285,72,2.904,76,2.676,77,2.076,78,1.941,80,2.872,81,3.096,128,1.709,154,2.605,157,2.605,159,2.605,160,2.605,161,2.228,386,4.062,404,3.834,405,3.562,414,3.562,415,3.562,416,4.182,417,4.182,418,4.182]],["title/injectables/OrderService.html",[89,1.021,404,2.045]],["body/injectables/OrderService.html",[3,0.202,4,0.182,5,0.125,7,0.36,8,1.274,13,0.023,19,0.832,32,1.365,33,1.451,34,0.652,35,1.147,36,1.534,39,1.447,40,0.575,41,0.529,48,0.202,49,0.06,50,1.012,51,0.952,55,1.229,59,1.534,61,0.012,62,0.012,89,1.07,90,1.149,93,1.441,115,1.811,170,1.422,171,1.422,172,2.044,175,2.23,179,1.422,204,3.646,209,3.115,224,2.483,239,1.447,243,5.096,245,2.109,246,3.179,254,2.043,268,1.319,269,1.686,374,2.483,379,1.853,388,2.483,389,1.853,398,1.853,402,1.229,403,2.109,404,2.144,419,2.109,420,2.476,421,3.732,422,2.476,423,3.732,424,2.476,425,2.476,426,1.867,427,1.422,428,1.422,429,1.686,430,3.06,431,2.476,432,3.732,433,2.476,434,2.476,435,2.476,436,2.476,437,2.476,438,2.476,439,2.476,440,5.571,441,1.686,442,2.476,443,2.476,444,2.476,445,2.109]],["title/modules/PrismaModule.html",[63,1.216,72,1.549]],["body/modules/PrismaModule.html",[3,0.367,4,0.331,5,0.228,13,0.022,40,0.605,41,0.964,48,0.367,49,0.11,61,0.018,62,0.018,63,1.93,65,1.962,66,2.311,72,3.005,76,2.807,77,2.238,78,2.093,80,3.012,172,2.931,446,3.84,447,3.84,448,3.84,449,4.508,450,5.654,451,4.508,452,4.508,453,4.508]],["title/injectables/PrismaService.html",[89,1.021,172,1.455]],["body/injectables/PrismaService.html",[3,0.338,4,0.305,5,0.21,7,0.603,8,1.832,13,0.023,19,0.893,32,1.262,33,1,34,0.603,35,1.061,39,1.728,40,0.575,41,0.888,48,0.338,49,0.101,61,0.017,62,0.017,89,1.539,90,1.928,169,3.612,172,2.193,188,2.859,347,3.342,426,3.132,454,3.538,455,5.063,456,5.366,457,6.663,458,5.366,459,6.283,460,4.154,461,3.538,462,4.154,463,4.154,464,4.154,465,4.154,466,4.154]],["title/classes/Product.html",[49,0.087,379,1.768]],["body/classes/Product.html",[3,0.333,4,0.3,5,0.206,7,0.593,13,0.022,19,1.123,33,1.42,34,0.981,35,1.694,36,2.013,48,0.333,49,0.099,61,0.016,62,0.016,93,1.748,205,1.315,208,1.812,224,2.635,254,2.135,268,3.141,269,4.016,373,3.672,375,3.672,376,3.888,379,2.635,467,3.478,468,4.084,469,4.084,470,4.084,471,4.084,472,4.084,473,4.084,474,4.084]],["title/controllers/ProductController.html",[0,1.29,475,2.425]],["body/controllers/ProductController.html",[0,0.939,2,0.939,3,0.211,4,0.19,5,0.131,7,0.376,8,1.319,12,1.982,13,0.023,14,1.614,15,2.406,19,0.91,26,3.805,32,1.555,33,1.233,34,0.743,35,1.307,39,1.762,40,0.615,41,0.554,42,3.296,43,1.489,44,0.743,48,0.211,49,0.063,50,1.059,51,0.997,52,1.614,53,3.143,59,1.747,61,0.012,62,0.012,93,1.595,101,1.614,122,2.219,123,1.765,124,1.765,125,2.406,126,1.614,127,1.614,128,1.059,129,2.406,145,1.614,202,2.143,215,2.631,218,3.29,239,1.244,241,2.631,249,4.607,254,2.365,266,3.296,367,3.574,379,1.287,388,2.54,389,1.918,391,1.765,392,2.631,394,2.631,395,2.913,398,1.287,399,1.765,402,1.287,411,1.765,412,1.765,475,2.631,476,2.208,477,1.793,478,2.592,479,2.592,480,1.489,481,1.955,482,2.913,483,2.592,484,1.955,485,2.592,486,2.592,487,1.489,488,3.805,489,1.955,490,2.913,491,2.592,492,1.955,493,2.652,494,2.208,495,1.489,496,2.592,497,2.592,498,1.955,499,2.592,500,2.592,501,2.592,502,1.955,503,1.955,504,2.592,505,1.955,506,1.955,507,1.955,508,2.592]],["title/modules/ProductModule.html",[63,1.216,73,2.218]],["body/modules/ProductModule.html",[2,1.952,3,0.341,4,0.307,5,0.211,13,0.022,40,0.698,41,0.894,48,0.341,49,0.102,61,0.017,62,0.017,63,1.84,65,1.82,66,2.203,72,2.904,73,4.285,76,2.676,77,2.076,78,1.941,80,2.872,81,3.096,128,1.709,154,2.605,157,2.605,159,2.605,160,2.605,161,2.228,475,4.062,493,3.834,494,3.562,509,3.562,510,4.182,511,3.562,512,4.182,513,4.182]],["title/injectables/ProductService.html",[89,1.021,493,2.045]],["body/injectables/ProductService.html",[3,0.207,4,0.187,5,0.128,7,0.369,8,1.3,13,0.023,19,0.983,29,1.461,32,1.732,33,1.373,34,0.827,35,1.455,39,1.835,40,0.61,41,0.544,48,0.207,49,0.062,50,1.039,51,0.978,55,2.266,59,1.853,61,0.012,62,0.012,89,1.092,90,1.18,93,1.661,113,3.633,117,1.355,169,3.466,170,1.461,171,1.461,172,2.072,175,1.891,179,1.461,188,2.701,190,1.584,191,1.18,202,1.768,239,1.226,241,2.594,254,2.25,266,2.911,356,1.732,379,1.891,388,2.517,389,1.891,398,1.891,402,1.263,427,1.461,428,1.461,429,1.732,430,3.453,441,2.594,477,2.119,480,2.187,487,2.187,488,3.157,493,2.187,495,1.461,514,2.166,515,2.872,516,2.543,517,2.594,518,2.543,519,3.881,520,2.543,521,2.543,522,2.872,523,2.543,524,2.543,525,2.543,526,1.918,527,2.543,528,2.543,529,3.443,530,2.543,531,1.918,532,1.918,533,3.443,534,2.543,535,1.918,536,2.543,537,2.543]],["title/classes/Table.html",[49,0.087,374,1.768]],["body/classes/Table.html",[3,0.366,4,0.33,5,0.227,7,0.652,13,0.022,19,1.076,34,0.939,35,1.737,48,0.366,49,0.109,61,0.018,62,0.018,93,1.44,205,1.447,208,1.926,224,3.308,254,2.233,373,3.84,374,2.8,375,3.84,376,4.028,538,3.826,539,4.492,540,4.492,541,4.492,542,4.492]],["title/controllers/TableController.html",[0,1.29,543,2.425]],["body/controllers/TableController.html",[0,0.925,2,0.925,3,0.208,4,0.187,5,0.129,7,0.371,8,1.304,12,1.97,13,0.023,14,1.591,15,2.379,19,0.905,22,5.181,32,1.544,33,1.224,34,0.738,35,1.297,39,1.751,40,0.634,41,0.546,42,3.278,43,1.467,44,0.732,48,0.208,49,0.062,50,1.044,51,0.982,52,1.591,53,3.123,59,1.734,61,0.012,62,0.012,93,1.588,101,1.591,113,3.493,122,2.194,123,1.739,124,1.739,125,2.379,126,1.591,127,1.591,128,1.044,129,2.379,145,1.591,202,2.124,227,4.586,239,1.23,254,2.293,294,2.918,367,3.164,374,1.897,388,2.522,389,1.897,391,1.739,392,2.602,394,2.602,398,1.268,399,1.739,402,1.268,411,1.739,412,1.739,477,1.773,480,1.467,481,1.926,482,2.881,484,1.926,487,1.467,489,1.926,490,2.881,492,1.926,495,1.467,498,1.926,502,1.926,503,1.926,505,1.926,506,1.926,507,1.926,517,1.739,519,3.887,543,2.602,544,2.175,545,2.554,546,2.554,547,3.82,548,3.82,549,2.554,550,2.554,551,3.164,552,2.554,553,2.881,554,2.175,555,2.629,556,2.175,557,2.554,558,2.554,559,2.554,560,2.554,561,2.554,562,2.554,563,2.554]],["title/modules/TableModule.html",[63,1.216,74,2.218]],["body/modules/TableModule.html",[2,1.952,3,0.341,4,0.307,5,0.211,13,0.022,40,0.698,41,0.894,48,0.341,49,0.102,61,0.017,62,0.017,63,1.84,65,1.82,66,2.203,72,2.904,74,4.285,76,2.676,77,2.076,78,1.941,80,2.872,81,3.096,128,1.709,154,2.605,157,2.605,159,2.605,160,2.605,161,2.228,543,4.062,555,3.834,556,3.562,564,3.562,565,4.182,566,3.562,567,4.182,568,4.182]],["title/injectables/TableService.html",[89,1.021,555,2.045]],["body/injectables/TableService.html",[3,0.207,4,0.187,5,0.128,7,0.369,8,1.3,13,0.023,19,0.983,29,1.461,32,1.732,33,1.373,34,0.827,35,1.455,39,1.835,40,0.61,41,0.544,48,0.207,49,0.062,50,1.039,51,0.978,55,2.266,59,1.853,61,0.012,62,0.012,89,1.092,90,1.18,93,1.661,113,3.633,117,1.355,169,3.466,170,1.461,171,1.461,172,2.072,175,1.891,179,1.461,188,2.701,190,1.584,191,1.18,202,1.768,239,1.226,254,2.25,294,2.911,356,1.732,374,1.891,388,2.517,389,1.891,398,1.891,402,1.263,427,1.461,428,1.461,429,1.732,430,3.453,441,2.594,477,2.119,480,2.187,487,2.187,495,1.461,515,2.872,517,2.594,519,3.881,522,2.872,526,1.918,529,3.443,531,1.918,532,1.918,533,3.443,535,1.918,551,3.157,553,2.872,554,2.166,555,2.187,569,2.166,570,2.543,571,2.543,572,2.543,573,2.543,574,2.543,575,2.543,576,2.543,577,2.543,578,2.543,579,2.543,580,2.543,581,2.543]],["title/classes/UpdateProductDto.html",[49,0.087,488,2.218]],["body/classes/UpdateProductDto.html",[3,0.415,4,0.374,5,0.257,13,0.022,40,0.653,44,1.461,48,0.415,49,0.124,61,0.019,62,0.019,205,1.641,239,1.641,241,3.47,244,3.47,266,2.926,347,3.173,488,3.795,582,4.34,583,3.842,584,5.095]],["title/classes/UpdateTableDto.html",[49,0.087,551,2.218]],["body/classes/UpdateTableDto.html",[3,0.415,4,0.374,5,0.257,13,0.022,40,0.653,44,1.461,48,0.415,49,0.124,61,0.019,62,0.019,205,1.641,239,1.641,294,2.926,296,3.842,347,3.173,551,3.795,553,3.842,583,3.842,585,4.34,586,5.095]],["title/classes/UpdateUserDto.html",[49,0.087,587,2.218]],["body/classes/UpdateUserDto.html",[3,0.415,4,0.374,5,0.257,13,0.022,40,0.653,44,1.461,48,0.415,49,0.124,61,0.019,62,0.019,205,1.641,239,1.641,299,2.926,301,3.842,347,3.173,583,3.842,587,3.795,588,4.34,589,3.842,590,5.095]],["title/classes/User.html",[49,0.087,115,1.29]],["body/classes/User.html",[3,0.333,4,0.3,5,0.206,7,0.593,13,0.022,19,1.123,33,1.42,34,0.981,35,1.694,48,0.333,49,0.099,61,0.016,62,0.016,93,1.783,115,1.922,181,3.141,182,3.386,205,1.315,208,1.812,254,2.135,268,3.141,373,3.672,375,3.672,376,3.888,591,3.478,592,4.084,593,4.084,594,4.084,595,4.084,596,4.084,597,4.084,598,4.084]],["title/controllers/UserController.html",[0,1.29,599,2.425]],["body/controllers/UserController.html",[0,0.927,2,0.927,3,0.208,4,0.188,5,0.129,7,0.372,8,1.306,12,1.971,13,0.023,14,1.594,15,2.383,19,0.905,26,3.791,32,1.545,33,1.225,34,0.738,35,1.299,39,1.753,40,0.612,41,0.547,42,3.28,43,1.47,44,0.734,48,0.208,49,0.062,50,1.046,51,0.984,52,1.594,53,3.126,59,1.736,61,0.012,62,0.012,93,1.589,101,1.594,115,0.927,118,3.496,122,2.198,123,1.743,124,1.743,125,2.383,126,1.594,127,1.594,128,1.046,129,3.39,145,3.167,202,2.127,215,2.606,239,1.232,254,2.253,299,3.28,367,3.557,388,2.525,389,1.9,391,1.743,392,2.606,394,2.606,395,2.885,398,1.271,399,1.743,402,1.271,411,1.743,412,1.743,477,1.776,480,1.47,481,1.93,482,2.885,484,1.93,487,1.47,489,1.93,490,2.885,492,1.93,495,1.47,498,1.93,502,1.93,503,1.93,505,1.93,506,1.93,507,1.93,587,3.791,589,2.885,599,2.606,600,2.18,601,2.559,602,2.559,603,4.583,604,2.559,605,2.559,606,2.559,607,2.559,608,2.559,609,2.632,610,2.18,611,2.559,612,2.559,613,2.559,614,2.559,615,2.559,616,2.559,617,2.559,618,2.559]],["title/modules/UserModule.html",[63,1.216,75,2.218]],["body/modules/UserModule.html",[2,1.952,3,0.341,4,0.307,5,0.211,13,0.022,40,0.698,41,0.894,48,0.341,49,0.102,61,0.017,62,0.017,63,1.84,65,1.82,66,2.203,72,2.904,75,4.285,76,2.676,77,2.076,78,1.941,80,2.872,81,3.096,128,1.709,154,2.605,157,2.605,159,2.605,160,2.605,161,2.228,599,4.062,609,3.834,610,3.562,619,3.562,620,4.182,621,3.562,622,4.182,623,4.182]],["title/injectables/UserService.html",[89,1.021,609,2.045]],["body/injectables/UserService.html",[3,0.168,4,0.151,5,0.104,7,0.299,8,1.104,13,0.023,19,0.944,29,1.181,32,1.591,33,1.367,34,0.795,35,1.337,39,1.686,40,0.587,41,0.44,48,0.168,49,0.05,50,0.84,51,0.791,55,1.985,59,1.683,61,0.01,62,0.01,89,0.928,90,0.954,93,1.582,113,3.431,115,1.171,117,1.096,169,3.424,170,1.181,171,1.181,172,1.853,175,1.606,178,2.439,179,1.181,180,3.015,181,1.723,182,2.297,188,2.789,189,1.551,190,2.491,191,1.856,202,2.105,208,1.104,239,1.288,243,4.669,254,2.206,268,1.723,299,2.604,353,2.755,356,2.724,373,2.015,375,2.015,388,2.251,389,1.606,398,1.606,402,1.021,427,1.181,428,1.181,429,1.401,430,3.088,440,3.862,441,2.203,477,1.856,480,1.858,487,1.858,495,1.181,515,2.439,517,2.203,519,3.566,522,2.439,526,1.551,529,3.015,531,1.551,532,1.551,533,3.015,535,1.551,587,2.824,589,2.439,609,1.858,624,1.751,625,3.999,626,2.056,627,2.056,628,2.056,629,2.056,630,2.056,631,2.056,632,2.056,633,2.056,634,1.751,635,1.751,636,2.056,637,2.056,638,2.056,639,2.056,640,4.534,641,3.999,642,4.534,643,3.235,644,3.235,645,3.235,646,3.235,647,3.235,648,2.056,649,2.439,650,3.235,651,3.235,652,2.056,653,2.056]],["title/changelog.html",[654,2.03,655,2.03,656,2.539]],["body/changelog.html",[4,0.269,5,0.262,13,0.014,30,1.535,61,0.009,62,0.009,78,0.837,191,1.352,230,1.352,239,0.581,376,2.282,477,1.352,649,2.763,656,5.319,657,2.913,658,3.934,659,3.173,660,1.803,661,3.121,662,2.913,663,3.665,664,1.803,665,1.803,666,2.481,667,4.208,668,1.803,669,1.803,670,3.665,671,1.535,672,5.74,673,1.803,674,1.535,675,1.803,676,3.173,677,1.803,678,4.208,679,1.803,680,1.803,681,1.803,682,1.803,683,6.08,684,1.803,685,3.121,686,1.803,687,1.803,688,2.913,689,1.803,690,1.803,691,3.121,692,2.913,693,2.913,694,3.665,695,2.913,696,1.803,697,2.913,698,6.686,699,1.803,700,1.803,701,1.803,702,1.803,703,2.913,704,1.803,705,2.913,706,1.803,707,2.913,708,1.803,709,2.913,710,1.803,711,1.803,712,1.803,713,1.803,714,1.803,715,1.803,716,1.803,717,2.913,718,2.913,719,1.803,720,1.803,721,1.803,722,1.803,723,1.803,724,1.803,725,1.803,726,1.803,727,1.803,728,1.803,729,1.803,730,1.803,731,4.94,732,3.121,733,1.535,734,1.803,735,3.934,736,5.411,737,1.803,738,2.913,739,1.803,740,1.803,741,1.803,742,2.913,743,1.803,744,1.803,745,1.803,746,1.803,747,3.665,748,2.913,749,2.913,750,2.913,751,1.803,752,1.803,753,1.803,754,1.803,755,1.803,756,3.665,757,3.665,758,2.913,759,1.535,760,2.913,761,2.913,762,1.535,763,1.803,764,2.913,765,1.535,766,1.535,767,2.913,768,4.609,769,4.94,770,1.803,771,2.913,772,1.803,773,2.481,774,1.803,775,4.619,776,3.665,777,1.535,778,1.803,779,1.803,780,1.803,781,1.803,782,2.913,783,1.803,784,1.803,785,2.481,786,1.803,787,1.803,788,3.121,789,1.803,790,1.535,791,1.803,792,1.803,793,1.803,794,1.803,795,1.803,796,1.803,797,1.803,798,1.535,799,1.803,800,1.803,801,2.913,802,1.803,803,1.803,804,1.803,805,4.208,806,1.803,807,1.803,808,1.535,809,1.803,810,1.803,811,1.803,812,1.803,813,1.803,814,1.803,815,1.803,816,2.913,817,1.803,818,1.803,819,2.913,820,1.803,821,1.803,822,1.803,823,1.803,824,1.803,825,1.535,826,1.803,827,2.913,828,1.803,829,1.803,830,1.803,831,1.803,832,1.803,833,4.94,834,1.803,835,2.913,836,1.803,837,3.665,838,3.665,839,1.803,840,2.913,841,1.803,842,1.803,843,1.803,844,1.535,845,1.803,846,1.803,847,1.803,848,1.803,849,2.913,850,1.803,851,2.913,852,1.535,853,1.803,854,1.803,855,1.803,856,1.803,857,1.803,858,1.803,859,1.803,860,1.803,861,2.913,862,1.803,863,2.913,864,1.803,865,1.803,866,1.803,867,1.803,868,1.803,869,1.803,870,1.803,871,1.803,872,1.803,873,1.803,874,1.803,875,1.803,876,1.803,877,1.803,878,1.803,879,1.803,880,1.535,881,1.535,882,1.803,883,1.803,884,1.803,885,1.803,886,1.803,887,1.803,888,1.803,889,1.803,890,1.535,891,1.803,892,1.803,893,1.803,894,1.803,895,1.803,896,1.803,897,1.803,898,1.535,899,2.481,900,1.803,901,1.803,902,1.803,903,1.803,904,1.803,905,1.803]],["title/contributing.html",[654,2.03,655,2.03,906,2.539]],["body/contributing.html",[5,0.11,11,3.531,13,0.011,19,0.363,24,1.359,32,0.663,61,0.011,62,0.011,66,0.892,122,1.253,180,2.555,191,1.573,445,3.538,477,1.013,658,1.858,659,4.801,666,1.858,674,2.886,676,3.132,685,1.858,733,2.886,735,2.886,759,2.886,762,2.886,765,2.886,773,1.858,785,1.858,788,1.858,790,1.858,798,1.858,808,2.886,825,1.858,844,1.858,898,1.858,899,3.989,906,2.886,907,2.886,908,4.154,909,1.858,910,2.182,911,2.182,912,3.388,913,2.182,914,3.388,915,2.182,916,2.182,917,3.388,918,5.6,919,5.6,920,3.388,921,2.182,922,4.154,923,1.858,924,2.182,925,2.182,926,3.388,927,2.182,928,2.182,929,2.182,930,3.388,931,3.388,932,2.182,933,2.182,934,4.154,935,1.645,936,2.182,937,2.182,938,2.182,939,2.182,940,2.182,941,2.182,942,2.182,943,2.182,944,2.182,945,2.182,946,2.182,947,2.182,948,2.182,949,2.182,950,3.388,951,2.182,952,2.182,953,3.388,954,2.182,955,2.182,956,3.388,957,2.182,958,5.07,959,2.182,960,5.07,961,3.388,962,2.182,963,3.388,964,2.182,965,2.182,966,2.182,967,2.182,968,2.182,969,2.182,970,2.182,971,2.182,972,2.182,973,2.182,974,3.388,975,2.182,976,2.182,977,2.182,978,3.388,979,2.182,980,3.388,981,5.07,982,2.182,983,2.182,984,2.182,985,2.182,986,3.388,987,2.182,988,2.182,989,2.182,990,2.182,991,2.182,992,2.182,993,2.182,994,2.182,995,2.182,996,2.182,997,2.182,998,2.182,999,2.182,1000,2.182,1001,3.388,1002,4.154,1003,2.182,1004,2.182,1005,2.182,1006,2.182,1007,2.182,1008,2.182,1009,2.182,1010,2.182,1011,3.388,1012,2.182,1013,2.182,1014,3.388,1015,2.182,1016,2.182,1017,2.182,1018,2.182,1019,2.182,1020,2.182,1021,4.154,1022,2.182,1023,2.182,1024,2.182,1025,2.182,1026,3.388,1027,2.182,1028,2.182,1029,2.182,1030,2.182,1031,2.182,1032,2.182,1033,2.182,1034,2.182,1035,3.388,1036,2.182,1037,2.182,1038,2.182,1039,3.388,1040,3.388,1041,2.182,1042,2.182,1043,2.182,1044,2.182,1045,2.182,1046,2.182,1047,2.182,1048,2.182,1049,2.182,1050,2.182,1051,2.182,1052,2.182,1053,2.182,1054,3.388,1055,2.182,1056,2.182,1057,2.182,1058,2.182,1059,2.182,1060,2.182,1061,2.182,1062,2.182,1063,3.388,1064,2.182,1065,3.388,1066,3.388,1067,2.182,1068,2.182,1069,2.182,1070,2.182,1071,2.182,1072,2.182,1073,2.182,1074,2.182,1075,2.182,1076,2.182,1077,2.182,1078,2.182,1079,3.388,1080,2.182,1081,2.182,1082,2.182,1083,2.182,1084,2.182,1085,3.388,1086,2.182,1087,2.182,1088,2.182,1089,2.182,1090,2.182,1091,2.182,1092,2.182,1093,2.182,1094,2.182,1095,2.182,1096,2.182,1097,2.182,1098,2.182,1099,2.182,1100,2.182,1101,2.182,1102,2.182,1103,2.182,1104,2.182,1105,2.182,1106,2.182,1107,2.182,1108,2.182,1109,2.182,1110,2.182,1111,2.182,1112,2.182,1113,2.182,1114,2.182,1115,2.182,1116,2.182,1117,2.182,1118,2.182,1119,2.182]],["title/coverage.html",[1120,4.127]],["body/coverage.html",[0,2.067,1,1.739,5,0.129,6,2.175,13,0.022,34,0.371,45,1.467,49,0.162,61,0.012,62,0.012,89,1.745,91,2.175,99,1.739,100,2.175,106,1.591,115,1.384,131,1.467,133,1.591,137,1.739,151,1.591,168,2.175,172,1.044,175,1.268,191,1.185,204,1.591,206,2.881,207,2.175,209,1.591,211,1.739,240,2.194,244,3.117,266,1.467,267,2.175,294,1.467,295,2.175,296,2.881,299,1.467,300,2.175,301,2.881,335,2.175,358,2.175,364,2.175,365,2.175,372,2.175,374,2.272,379,1.897,386,1.739,387,2.175,401,1.926,404,1.467,419,2.175,427,1.467,428,1.467,454,2.175,467,2.175,475,1.739,476,2.175,488,1.591,493,1.467,514,2.175,538,2.175,543,1.739,544,2.175,551,1.591,555,1.467,569,2.175,582,2.175,585,2.175,587,1.591,588,2.175,591,2.175,599,1.739,600,2.175,609,1.467,624,2.175,852,3.254,1120,2.175,1121,2.554,1122,2.554,1123,2.554,1124,2.554,1125,2.554,1126,7.205,1127,3.82,1128,5.916,1129,2.175,1130,6.219,1131,6.645,1132,2.175,1133,2.175,1134,3.82,1135,2.554,1136,4.577,1137,3.254,1138,2.175,1139,3.254,1140,3.254,1141,2.175,1142,3.254,1143,3.254,1144,3.254,1145,3.254,1146,2.175,1147,5.08,1148,5.08,1149,2.554,1150,2.175,1151,2.554]],["title/dependencies.html",[66,1.749,1152,2.539]],["body/dependencies.html",[13,0.023,38,4.872,41,0.982,44,1.318,49,0.139,61,0.018,62,0.018,66,1.877,178,3.464,234,3.913,238,2.447,426,3.464,1153,6.229,1154,4.594,1155,4.594,1156,4.594,1157,4.594,1158,4.594,1159,4.594,1160,4.594,1161,4.594,1162,4.594,1163,4.594,1164,4.594,1165,4.594,1166,4.594,1167,4.594,1168,4.594,1169,4.594,1170,4.594,1171,3.913,1172,4.594,1173,4.594,1174,4.594,1175,4.594]],["title/miscellaneous/functions.html",[1176,2.03,1177,3.645]],["body/miscellaneous/functions.html",[7,0.734,13,0.021,32,1.535,33,1.217,34,0.734,35,1.29,39,1.627,61,0.019,62,0.019,222,4.304,427,3.482,428,2.902,1132,4.304,1133,5.533,1150,5.164,1176,3.441,1177,4.304,1178,5.053,1179,5.053,1180,5.053,1181,6.496]],["title/index.html",[7,0.433,654,2.03,655,2.03]],["body/index.html",[13,0.022,36,1.545,61,0.018,62,0.018,95,3.854,316,3.412,317,3.412,461,3.854,659,3.412,732,3.854,766,3.854,880,3.854,907,3.854,923,3.854,1171,3.854,1182,4.525,1183,4.525,1184,4.525,1185,4.525,1186,5.667,1187,4.525,1188,5.667,1189,4.525,1190,4.525,1191,6.485,1192,4.525,1193,4.525,1194,6.187,1195,4.525,1196,5.667,1197,4.525,1198,4.525,1199,4.525,1200,4.525,1201,4.525,1202,3.854,1203,4.525,1204,4.525,1205,4.525]],["title/modules.html",[65,2.108]],["body/modules.html",[13,0.018,61,0.018,62,0.018,64,3.304,65,2.111,70,3.021,71,3.021,72,2.111,73,3.021,74,3.021,75,3.021,1206,7.015,1207,7.015,1208,7.015,1209,7.015]],["title/overview.html",[1210,4.127]],["body/overview.html",[2,1.23,13,0.022,45,3.086,61,0.015,62,0.015,64,4.793,65,1.478,66,1.918,67,2.894,68,2.894,69,2.894,70,4.152,71,4.014,72,2.966,73,4.014,74,4.014,75,4.014,76,2.329,77,1.687,78,1.577,90,1.577,131,3.086,148,2.894,150,2.894,151,3.347,172,2.634,205,1.094,404,3.086,414,2.894,415,2.894,446,2.894,447,2.894,448,2.894,493,3.086,509,2.894,511,2.894,555,3.086,564,2.894,566,2.894,609,3.086,619,2.894,621,2.894,1210,2.894,1211,3.398,1212,3.398,1213,3.398,1214,3.398]],["title/properties.html",[208,1.461,1152,2.539]],["body/properties.html",[13,0.022,36,1.84,61,0.02,62,0.02,208,1.84,676,4.064,881,4.59,1202,4.59,1215,5.389,1216,5.389]],["title/todo.html",[654,2.03,655,2.03,1217,2.539]],["body/todo.html",[5,0.243,13,0.02,36,1.643,61,0.018,62,0.018,230,2.732,239,1.55,661,4.099,671,4.099,691,4.099,768,4.099,777,4.099,890,4.099,909,4.099,1217,4.099,1218,6.36,1219,4.812,1220,4.812,1221,4.812,1222,4.812,1223,5.887,1224,4.812,1225,4.812,1226,4.812,1227,4.812,1228,4.812,1229,4.812,1230,4.812,1231,4.812,1232,4.812,1233,4.812,1234,4.812,1235,4.812,1236,4.812,1237,4.812,1238,4.812]],["title/miscellaneous/variables.html",[935,3.227,1176,2.03]],["body/miscellaneous/variables.html",[7,0.36,11,1.867,13,0.023,24,2.798,28,3.24,29,1.422,33,1.293,34,0.652,36,1.534,55,2.664,59,0.845,61,0.012,62,0.012,115,1.811,137,2.542,169,2.393,175,2.664,181,1.988,182,2.144,188,2.665,191,1.149,201,1.867,202,1.149,209,2.325,224,2.483,231,1.686,239,1.447,268,2.665,269,3.06,271,3.826,272,4.26,273,4.804,274,3.826,275,3.826,276,3.826,277,3.826,278,4.26,281,3.826,284,3.826,288,3.826,293,2.109,308,1.867,311,2.109,316,1.867,317,1.867,321,2.109,374,1.853,379,1.853,401,1.867,455,4.26,477,2.085,634,5.252,635,5.252,649,1.867,935,1.867,1129,3.179,1137,2.109,1138,3.179,1139,2.109,1140,3.826,1141,3.179,1142,2.109,1143,3.826,1144,2.109,1145,3.826,1146,3.179,1176,1.686,1239,2.476,1240,3.732,1241,3.732,1242,3.732,1243,3.732,1244,2.476,1245,2.476,1246,2.476,1247,2.476,1248,2.476,1249,2.476,1250,5.641,1251,2.476,1252,2.476,1253,2.476,1254,2.476,1255,2.476,1256,2.476,1257,2.476,1258,2.476,1259,2.476,1260,2.476,1261,2.476,1262,2.476,1263,2.476,1264,2.476,1265,2.476,1266,2.476]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":881,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.0.2",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["0.0.7",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["0.0.8",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["0.1.13",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":777,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["04f66779",{"_index":255,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["05",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":231,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["1.4",{"_index":1116,"title":{},"body":{"contributing.html":{}}}],["1/2",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":649,"title":{},"body":{"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["12.34",{"_index":288,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["14",{"_index":1214,"title":{},"body":{"overview.html":{}}}],["16",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["1d",{"_index":1230,"title":{},"body":{"todo.html":{}}}],["2",{"_index":293,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["20",{"_index":671,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["2014",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["2015",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["2017",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":1228,"title":{},"body":{"todo.html":{}}}],["24h",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["2})@apiproperty({description",{"_index":286,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["3",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["31",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["345",{"_index":1237,"title":{},"body":{"todo.html":{}}}],["3d",{"_index":1225,"title":{},"body":{"todo.html":{}}}],["4.0.0",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["4c5c",{"_index":257,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["5.0.1",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1212,"title":{},"body":{"overview.html":{}}}],["7",{"_index":1211,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1213,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["8601",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["_count",{"_index":443,"title":{},"body":{"injectables/OrderService.html":{}}}],["a140",{"_index":258,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["abcd@1234",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["abusive",{"_index":1080,"title":{},"body":{"contributing.html":{}}}],["acceptable",{"_index":1032,"title":{},"body":{"contributing.html":{}}}],["accepting",{"_index":993,"title":{},"body":{"contributing.html":{}}}],["account",{"_index":1071,"title":{},"body":{"contributing.html":{}}}],["aciek",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["acting",{"_index":1072,"title":{},"body":{"contributing.html":{}}}],["action",{"_index":1038,"title":{},"body":{"contributing.html":{}}}],["adapted",{"_index":1114,"title":{},"body":{"contributing.html":{}}}],["added",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["address",{"_index":1021,"title":{},"body":{"contributing.html":{}}}],["adheres",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["advances",{"_index":1008,"title":{},"body":{"contributing.html":{}}}],["against",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":966,"title":{},"body":{"contributing.html":{}}}],["aishek",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["aligned",{"_index":1050,"title":{},"body":{"contributing.html":{}}}],["amielucha",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["answer",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["answers",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["apenas",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["api",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":233,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('order",{"_index":406,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('product",{"_index":496,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('status",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('table",{"_index":557,"title":{},"body":{"controllers/TableController.html":{}}}],["apitags('user",{"_index":611,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":461,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":466,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appearance",{"_index":975,"title":{},"body":{"contributing.html":{}}}],["application",{"_index":1182,"title":{},"body":{"index.html":{}}}],["applies",{"_index":1061,"title":{},"body":{"contributing.html":{}}}],["appmodule",{"_index":64,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appointed",{"_index":1073,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1035,"title":{},"body":{"contributing.html":{}}}],["appservice",{"_index":45,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argument",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["art4",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["asked",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["assume",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["async",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["attacks",{"_index":1013,"title":{},"body":{"contributing.html":{}}}],["attention",{"_index":1007,"title":{},"body":{"contributing.html":{}}}],["attribution",{"_index":1113,"title":{},"body":{"contributing.html":{}}}],["autenticado",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{}}}],["autenticação",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":99,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":70,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1216,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["authservice",{"_index":131,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automates",{"_index":1183,"title":{},"body":{"index.html":{}}}],["available",{"_index":1117,"title":{},"body":{"contributing.html":{}}}],["await",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["azkidenz",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":637,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":643,"title":{},"body":{"injectables/UserService.html":{}}}],["ban",{"_index":1051,"title":{},"body":{"contributing.html":{}}}],["based",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["baseurl",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["basic",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["batista",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bcfa",{"_index":256,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["bcrypt",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":652,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(dto.password",{"_index":648,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(obj.password",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":917,"title":{},"body":{"contributing.html":{}}}],["behavior",{"_index":981,"title":{},"body":{"contributing.html":{}}}],["behaviors",{"_index":1055,"title":{},"body":{"contributing.html":{}}}],["being",{"_index":987,"title":{},"body":{"contributing.html":{}}}],["benefit",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["best",{"_index":997,"title":{},"body":{"contributing.html":{}}}],["better",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"contributing.html":{}}}],["bootstrap",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["borda",{"_index":276,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["both",{"_index":790,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["br",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["brazilian",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["brits",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1209,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1206,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":1231,"title":{},"body":{"todo.html":{}}}],["build",{"_index":926,"title":{},"body":{"contributing.html":{}}}],["calabresa",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["can’t",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["care",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["catch(handleerror",{"_index":441,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["catupiry",{"_index":278,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["cebola",{"_index":251,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["change",{"_index":735,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["changed",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":656,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelogs",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":658,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["checa",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["chinese",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["chronological",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":1093,"title":{},"body":{"contributing.html":{}}}],["clarified",{"_index":825,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["clarify",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["clarifying",{"_index":1031,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":49,"title":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":205,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clone",{"_index":1188,"title":{},"body":{"index.html":{}}}],["closed",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":414,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":416,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":415,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":446,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":448,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":447,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":509,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":510,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":511,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_tablemodule",{"_index":564,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":565,"title":{},"body":{"modules/TableModule.html":{}}}],["cluster_tablemodule_providers",{"_index":566,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":619,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":620,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":621,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cname",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["code",{"_index":918,"title":{},"body":{"contributing.html":{}}}],["com",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["comments",{"_index":1011,"title":{},"body":{"contributing.html":{}}}],["commit",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["commits",{"_index":1045,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["community",{"_index":960,"title":{},"body":{"contributing.html":{}}}],["comparison",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["complaints",{"_index":1087,"title":{},"body":{"contributing.html":{}}}],["conduct",{"_index":919,"title":{},"body":{"contributing.html":{}}}],["confidentiality",{"_index":1096,"title":{},"body":{"contributing.html":{}}}],["confirmação",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":432,"title":{},"body":{"injectables/OrderService.html":{}}}],["considered",{"_index":1025,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructive",{"_index":994,"title":{},"body":{"contributing.html":{}}}],["constructor",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["contacting",{"_index":1084,"title":{},"body":{"contributing.html":{}}}],["contained",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["container",{"_index":940,"title":{},"body":{"contributing.html":{}}}],["contains",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["content",{"_index":1221,"title":{},"body":{"todo.html":{}}}],["contributes",{"_index":982,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":906,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributions",{"_index":1049,"title":{},"body":{"contributing.html":{}}}],["contributor",{"_index":1054,"title":{},"body":{"contributing.html":{}}}],["contributors",{"_index":957,"title":{},"body":{"contributing.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('order",{"_index":407,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('product",{"_index":497,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('table",{"_index":558,"title":{},"body":{"controllers/TableController.html":{}}}],["controller('user",{"_index":612,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["corrective",{"_index":1037,"title":{},"body":{"contributing.html":{}}}],["correta",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["counter",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["covenant",{"_index":1115,"title":{},"body":{"contributing.html":{}}}],["covenant.org/version/1/4",{"_index":1119,"title":{},"body":{"contributing.html":{}}}],["coverage",{"_index":1120,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":239,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":498,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":408,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(createproductdto",{"_index":478,"title":{},"body":{"controllers/ProductController.html":{}}}],["create(createuserdto",{"_index":601,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":517,"title":{},"body":{"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":390,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(userid",{"_index":421,"title":{},"body":{"injectables/OrderService.html":{}}}],["createdat",{"_index":373,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createmany",{"_index":434,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto",{"_index":204,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["createorderdto.products.map((createorderproductdto",{"_index":435,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto.tablenumber",{"_index":433,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto",{"_index":211,"title":{"classes/CreateOrderProductDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["createorderproductdto.description",{"_index":438,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.productid",{"_index":436,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.quantity",{"_index":437,"title":{},"body":{"injectables/OrderService.html":{}}}],["createparamdecorator((_",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":266,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createtabledto",{"_index":294,"title":{"classes/CreateTableDto.html":{}},"body":{"classes/CreateTableDto.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":299,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creating",{"_index":983,"title":{},"body":{"contributing.html":{}}}],["criar",{"_index":392,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["criticism",{"_index":995,"title":{},"body":{"contributing.html":{}}}],["croatian",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["cry",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["custom",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["czech",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["código",{"_index":453,"title":{},"body":{"modules/PrismaModule.html":{}}}],["da",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{}}}],["dados",{"_index":370,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["data",{"_index":430,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":651,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":376,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"changelog.html":{}}}],["dates",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["deem",{"_index":1056,"title":{},"body":{"contributing.html":{}}}],["deemed",{"_index":1091,"title":{},"body":{"contributing.html":{}}}],["default",{"_index":634,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"contributing.html":{}}}],["delete",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":505,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":481,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":507,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":480,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dener",{"_index":316,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["denerbatista",{"_index":321,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":66,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"contributing.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecations",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"index.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["descrição",{"_index":270,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["details",{"_index":931,"title":{},"body":{"contributing.html":{}}}],["determined",{"_index":1110,"title":{},"body":{"contributing.html":{}}}],["deve",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["developers",{"_index":949,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":1193,"title":{},"body":{"index.html":{}}}],["diff",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["differentiate",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["differing",{"_index":989,"title":{},"body":{"contributing.html":{}}}],["diffs",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["disability",{"_index":968,"title":{},"body":{"contributing.html":{}}}],["discuss",{"_index":910,"title":{},"body":{"contributing.html":{}}}],["docs",{"_index":95,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["documentation",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["documented",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["doing",{"_index":929,"title":{},"body":{"contributing.html":{}}}],["domain",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["done",{"_index":1238,"title":{},"body":{"todo.html":{}}}],["dos",{"_index":217,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["dto",{"_index":519,"title":{},"body":{"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["dto.confirmpassword",{"_index":642,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":641,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/create",{"_index":402,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":495,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["e/ou",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["each",{"_index":242,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["edit",{"_index":1043,"title":{},"body":{"contributing.html":{}}}],["editar",{"_index":490,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["edits",{"_index":1047,"title":{},"body":{"contributing.html":{}}}],["electronic",{"_index":1020,"title":{},"body":{"contributing.html":{}}}],["email",{"_index":914,"title":{},"body":{"contributing.html":{}}}],["empathy",{"_index":999,"title":{},"body":{"contributing.html":{}}}],["empty",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["enableshutdownhooks",{"_index":456,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":458,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":532,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["encourage",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":927,"title":{},"body":{"contributing.html":{}}}],["enforce",{"_index":1104,"title":{},"body":{"contributing.html":{}}}],["enforcement",{"_index":1079,"title":{},"body":{"contributing.html":{}}}],["english",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["ensure",{"_index":924,"title":{},"body":{"contributing.html":{}}}],["entities/product.entity",{"_index":527,"title":{},"body":{"injectables/ProductService.html":{}}}],["entities/table.entity",{"_index":554,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{}}}],["entities/user.entity",{"_index":638,"title":{},"body":{"injectables/UserService.html":{}}}],["environment",{"_index":934,"title":{},"body":{"contributing.html":{}}}],["equally",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["error",{"_index":1181,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error.util",{"_index":429,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["error.util.ts",{"_index":1150,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["es",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["est",{"_index":228,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{}}}],["estão",{"_index":220,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["ethnicity",{"_index":969,"title":{},"body":{"contributing.html":{}}}],["event",{"_index":1077,"title":{},"body":{"contributing.html":{}}}],["everyone",{"_index":964,"title":{},"body":{"contributing.html":{}}}],["evolving",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["example",{"_index":230,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"changelog.html":{},"todo.html":{}}}],["examples",{"_index":899,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["exclusionary",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["executioncontext",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exibição",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["existe",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["expected",{"_index":1033,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":963,"title":{},"body":{"contributing.html":{}}}],["experiences",{"_index":991,"title":{},"body":{"contributing.html":{}}}],["expiresin",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["explanation",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["explicit",{"_index":1023,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":450,"title":{},"body":{"modules/PrismaModule.html":{}}}],["exposed",{"_index":936,"title":{},"body":{"contributing.html":{}}}],["express",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["expression",{"_index":971,"title":{},"body":{"contributing.html":{}}}],["extends",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f234138890f3",{"_index":259,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["face",{"_index":1106,"title":{},"body":{"contributing.html":{}}}],["fair",{"_index":1036,"title":{},"body":{"contributing.html":{}}}],["faith",{"_index":1105,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["feat",{"_index":1226,"title":{},"body":{"todo.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"todo.html":{}}}],["files",{"_index":943,"title":{},"body":{"contributing.html":{}}}],["fina",{"_index":275,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":388,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid",{"_index":515,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":522,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":389,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":412,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":398,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["fino",{"_index":273,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":909,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["fix",{"_index":768,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixed",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["focusing",{"_index":996,"title":{},"body":{"contributing.html":{}}}],["follow",{"_index":920,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["footnote",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":661,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["formatting",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["fostering",{"_index":955,"title":{},"body":{"contributing.html":{}}}],["fraca",{"_index":334,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fraca'})@apiproperty({description",{"_index":328,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["frango",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":962,"title":{},"body":{"contributing.html":{}}}],["french",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["frequently",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["fresh",{"_index":1186,"title":{},"body":{"index.html":{}}}],["fun",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":852,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["functions",{"_index":1177,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":759,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gather",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["gender",{"_index":970,"title":{},"body":{"contributing.html":{}}}],["gerado",{"_index":366,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["german",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["get(':id",{"_index":411,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":399,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(@req",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus(baseurl",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":654,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"todo.html":{}},"body":{}}],["git",{"_index":766,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github",{"_index":890,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["good",{"_index":898,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["gracefully",{"_index":992,"title":{},"body":{"contributing.html":{}}}],["guidelines",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["guiding",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["h4vry",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["hameds",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["handleerror",{"_index":427,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":1180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["harassing",{"_index":1081,"title":{},"body":{"contributing.html":{}}}],["harassment",{"_index":961,"title":{},"body":{"contributing.html":{}}}],["harmful",{"_index":1059,"title":{},"body":{"contributing.html":{}}}],["headings",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["help",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["homepage",{"_index":1229,"title":{},"body":{"todo.html":{}}}],["hopefully",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["http://contributor",{"_index":1118,"title":{},"body":{"contributing.html":{}}}],["httpcode",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":506,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://avatars.githubusercontent.com/u/7906171",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["https://github.com/denerbatista/pizza",{"_index":1189,"title":{},"body":{"index.html":{}}}],["https://i.imgur.com/hne75iw.png",{"_index":281,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["https://pizza",{"_index":1185,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["id",{"_index":254,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id'})@useguards(undefined)@apibearerauth",{"_index":603,"title":{},"body":{"controllers/UserController.html":{}}}],["ideal",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["identifier",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":674,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["ids",{"_index":216,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["ignoreexpiration",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["iguais",{"_index":647,"title":{},"body":{"injectables/UserService.html":{}}}],["igual",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["image",{"_index":268,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["imagem",{"_index":280,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["imagery",{"_index":1005,"title":{},"body":{"contributing.html":{}}}],["implements",{"_index":463,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["improve",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["inappropriate",{"_index":1026,"title":{},"body":{"contributing.html":{}}}],["incident",{"_index":1099,"title":{},"body":{"contributing.html":{}}}],["include",{"_index":445,"title":{},"body":{"injectables/OrderService.html":{},"contributing.html":{}}}],["includes",{"_index":933,"title":{},"body":{"contributing.html":{}}}],["including",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["inclusive",{"_index":985,"title":{},"body":{"contributing.html":{}}}],["increase",{"_index":941,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":1064,"title":{},"body":{"contributing.html":{}}}],["inestapplication",{"_index":459,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["informada",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["informadas",{"_index":645,"title":{},"body":{"injectables/UserService.html":{}}}],["information",{"_index":1017,"title":{},"body":{"contributing.html":{}}}],["injectable",{"_index":89,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":90,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["insert",{"_index":1086,"title":{},"body":{"contributing.html":{}}}],["install",{"_index":925,"title":{},"body":{"contributing.html":{}}}],["installrunning",{"_index":1192,"title":{},"body":{"index.html":{}}}],["instances",{"_index":1040,"title":{},"body":{"contributing.html":{}}}],["instead",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["insulting/derogatory",{"_index":1010,"title":{},"body":{"contributing.html":{}}}],["intentionally",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":921,"title":{},"body":{"contributing.html":{}}}],["interest",{"_index":954,"title":{},"body":{"contributing.html":{}}}],["interface",{"_index":932,"title":{},"body":{"contributing.html":{}}}],["investigated",{"_index":1089,"title":{},"body":{"contributing.html":{}}}],["inválidos",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["ishashvalid",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["isint",{"_index":235,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isint()@ispositive()@apiproperty({description",{"_index":225,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isnotempty",{"_index":363,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnumber",{"_index":290,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isnumber()@ispositive()@apiproperty({description",{"_index":297,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":285,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["iso",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["ispositive",{"_index":236,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isstring",{"_index":264,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@apiproperty({description",{"_index":247,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":359,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@minlength(6)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":323,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["issue",{"_index":913,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":1048,"title":{},"body":{"contributing.html":{}}}],["isurl",{"_index":291,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl()@apiproperty({description",{"_index":279,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isuuid",{"_index":265,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":253,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["it's",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["italian",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["itens",{"_index":262,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["jane",{"_index":1232,"title":{},"body":{"todo.html":{}}}],["jira",{"_index":1236,"title":{},"body":{"todo.html":{}}}],["jkostolansky",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["john",{"_index":1227,"title":{},"body":{"todo.html":{}}}],["jwt",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["jwt.strategy",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":151,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["karalamalar",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["keep",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["keeping",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["korean",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["language",{"_index":986,"title":{},"body":{"contributing.html":{}}}],["latest",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["layer",{"_index":928,"title":{},"body":{"contributing.html":{}}}],["leadership",{"_index":1112,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["level",{"_index":972,"title":{},"body":{"contributing.html":{}}}],["license",{"_index":1202,"title":{},"body":{"index.html":{},"properties.html":{}}}],["link",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["lista",{"_index":214,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["listar",{"_index":394,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["locations",{"_index":939,"title":{},"body":{"contributing.html":{}}}],["log",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["logged",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["login",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":106,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":133,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["logs",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["m",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["made",{"_index":1205,"title":{},"body":{"index.html":{}}}],["magol",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["mail",{"_index":1067,"title":{},"body":{"contributing.html":{}}}],["maintain",{"_index":1095,"title":{},"body":{"contributing.html":{}}}],["maintainers",{"_index":958,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":685,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["makes",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":808,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["markdown",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["massa",{"_index":274,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["matches",{"_index":330,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":333,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":292,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["media",{"_index":1070,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":1001,"title":{},"body":{"contributing.html":{}}}],["mentioning",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["mentions",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["merge",{"_index":762,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["mesa",{"_index":227,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"controllers/TableController.html":{}}}],["mesas",{"_index":548,"title":{},"body":{"controllers/TableController.html":{}}}],["message",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":915,"title":{},"body":{"contributing.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":331,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":332,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":1176,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1201,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1196,"title":{},"body":{"index.html":{}}}],["module",{"_index":63,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":65,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["momento'})@apibearerauth",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["mpbzh",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["muito",{"_index":327,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mussarela",{"_index":272,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nationality",{"_index":973,"title":{},"body":{"contributing.html":{}}}],["navigation",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":1092,"title":{},"body":{"contributing.html":{}}}],["needs",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["nestjs/mapped",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["nestjs/platform",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nickname",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nico",{"_index":320,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["noise",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["nome",{"_index":283,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["notable",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":844,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["notfoundexception",{"_index":526,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`registro",{"_index":531,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["novo",{"_index":452,"title":{},"body":{"modules/PrismaModule.html":{}}}],["now",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1191,"title":{},"body":{"index.html":{}}}],["number",{"_index":224,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/Table.html":{},"miscellaneous/variables.html":{}}}],["numbers",{"_index":942,"title":{},"body":{"contributing.html":{}}}],["não",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["número",{"_index":226,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{}}}],["o",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["obj",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.name",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.nickname",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.number",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":633,"title":{},"body":{"injectables/UserService.html":{}}}],["object.entries(seed",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(products",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(tables",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(users",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objeto",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["obligated",{"_index":1094,"title":{},"body":{"contributing.html":{}}}],["observações",{"_index":248,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["obvious",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["occupy",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["offensive",{"_index":1058,"title":{},"body":{"contributing.html":{}}}],["official",{"_index":1066,"title":{},"body":{"contributing.html":{}}}],["offline",{"_index":1076,"title":{},"body":{"contributing.html":{}}}],["once",{"_index":946,"title":{},"body":{"contributing.html":{}}}],["online",{"_index":1075,"title":{},"body":{"contributing.html":{}}}],["onmoduleinit",{"_index":457,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":788,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["optional",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":240,"title":{"classes/Order.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["order.controller",{"_index":418,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":403,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.dto.ts",{"_index":207,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:13",{"_index":232,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:23",{"_index":223,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.service",{"_index":405,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":386,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordering",{"_index":880,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ordermodule",{"_index":71,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderservice",{"_index":404,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["orientation",{"_index":979,"title":{},"body":{"contributing.html":{}}}],["os",{"_index":215,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["osadchyi",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["others",{"_index":1016,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":1082,"title":{},"body":{"contributing.html":{}}}],["ou",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["out",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{}}}],["outdated",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["over",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1210,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owners",{"_index":916,"title":{},"body":{"contributing.html":{}}}],["package",{"_index":1152,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["para",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["param",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"contributing.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":535,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":583,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createproductdto",{"_index":584,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createtabledto",{"_index":586,"title":{},"body":{"classes/UpdateTableDto.html":{}}}],["partialtype(createuserdto",{"_index":590,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["participants",{"_index":1003,"title":{},"body":{"contributing.html":{}}}],["participation",{"_index":959,"title":{},"body":{"contributing.html":{}}}],["passport",{"_index":346,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportmodule",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":492,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":502,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":489,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["paulosalvatore",{"_index":360,"title":{},"body":{"classes/LoginDto.html":{}}}],["payload",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.nickname",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pedido",{"_index":221,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"controllers/OrderController.html":{}}}],["pedidos",{"_index":396,"title":{},"body":{"controllers/OrderController.html":{}}}],["pelo",{"_index":367,"title":{},"body":{"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["people",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["perfil",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["permanent",{"_index":1108,"title":{},"body":{"contributing.html":{}}}],["permanently",{"_index":1053,"title":{},"body":{"contributing.html":{}}}],["permission",{"_index":950,"title":{},"body":{"contributing.html":{}}}],["persian",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["personal",{"_index":974,"title":{},"body":{"contributing.html":{}}}],["phrasing",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["physical",{"_index":1019,"title":{},"body":{"contributing.html":{}}}],["pierceh89",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["pizza",{"_index":284,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["pizzeria",{"_index":1184,"title":{},"body":{"index.html":{}}}],["please",{"_index":908,"title":{},"body":{"contributing.html":{}}}],["pledge",{"_index":953,"title":{},"body":{"contributing.html":{}}}],["podcast",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["policies",{"_index":1101,"title":{},"body":{"contributing.html":{}}}],["polish",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["political",{"_index":1012,"title":{},"body":{"contributing.html":{}}}],["ports",{"_index":937,"title":{},"body":{"contributing.html":{}}}],["portugese",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["portuguese",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["porx",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["positive",{"_index":984,"title":{},"body":{"contributing.html":{}}}],["post",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":391,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["posted",{"_index":1102,"title":{},"body":{"contributing.html":{}}}],["posting",{"_index":1068,"title":{},"body":{"contributing.html":{}}}],["prefix",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["previous",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["preço",{"_index":287,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["price",{"_index":269,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["principles",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma.ordercreateinput",{"_index":431,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.product.upsert",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.productcreateinput",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":451,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.table.upsert",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.tablecreateinput",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.user.upsert",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":426,"title":{},"body":{"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":455,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":72,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":172,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"contributing.html":{}}}],["process",{"_index":923,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["process.env.jwt_secret",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["procura",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["product",{"_index":379,"title":{"classes/Product.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product.controller",{"_index":513,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":241,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":244,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:10",{"_index":260,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:18",{"_index":263,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:25",{"_index":252,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:27",{"_index":289,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:34",{"_index":282,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.service",{"_index":494,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product.ts",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["product/product.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":475,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":245,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["production",{"_index":1198,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":73,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":209,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productservice",{"_index":493,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["produto",{"_index":249,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"controllers/ProductController.html":{}}}],["produtos",{"_index":218,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{}}}],["professional",{"_index":1027,"title":{},"body":{"contributing.html":{}}}],["profile",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["progress",{"_index":1234,"title":{},"body":{"todo.html":{}}}],["project",{"_index":659,"title":{},"body":{"changelog.html":{},"contributing.html":{},"index.html":{}}}],["project's",{"_index":1111,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["promise",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["proper",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":208,"title":{"properties.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providers",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["pt",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1014,"title":{},"body":{"contributing.html":{}}}],["publishing",{"_index":1015,"title":{},"body":{"contributing.html":{}}}],["pull",{"_index":922,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["quantidade",{"_index":261,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["quantity",{"_index":246,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["que",{"_index":219,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["queijo",{"_index":271,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["questions",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["race",{"_index":976,"title":{},"body":{"contributing.html":{}}}],["raw",{"_index":1220,"title":{},"body":{"todo.html":{}}}],["readme",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":930,"title":{},"body":{"contributing.html":{}}}],["readonly",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["realizando",{"_index":229,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["realizar",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["reasonably",{"_index":1024,"title":{},"body":{"contributing.html":{}}}],["recebe",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["recebendo",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["recent",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["recheada",{"_index":277,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["recommended",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":529,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["refer",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["reflect",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["regard",{"_index":1097,"title":{},"body":{"contributing.html":{}}}],["regardless",{"_index":965,"title":{},"body":{"contributing.html":{}}}],["reject",{"_index":1044,"title":{},"body":{"contributing.html":{}}}],["release",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["released",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["releases",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["religion",{"_index":977,"title":{},"body":{"contributing.html":{}}}],["reluctantly",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":785,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["removed",{"_index":773,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["remover",{"_index":482,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["repercussions",{"_index":1109,"title":{},"body":{"contributing.html":{}}}],["repo",{"_index":1235,"title":{},"body":{"todo.html":{}}}],["reported",{"_index":1083,"title":{},"body":{"contributing.html":{}}}],["reporter",{"_index":1098,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":907,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["represent",{"_index":944,"title":{},"body":{"contributing.html":{}}}],["representation",{"_index":1078,"title":{},"body":{"contributing.html":{}}}],["representative",{"_index":1074,"title":{},"body":{"contributing.html":{}}}],["representing",{"_index":1065,"title":{},"body":{"contributing.html":{}}}],["req",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["req.get('host",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":57,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requisição",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["respectful",{"_index":988,"title":{},"body":{"contributing.html":{}}}],["response",{"_index":1039,"title":{},"body":{"contributing.html":{}}}],["response.dto",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":365,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":371,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":369,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["responsibilities",{"_index":1029,"title":{},"body":{"contributing.html":{}}}],["responsibility",{"_index":1042,"title":{},"body":{"contributing.html":{}}}],["responsible",{"_index":1030,"title":{},"body":{"contributing.html":{}}}],["result",{"_index":1090,"title":{},"body":{"contributing.html":{}}}],["results",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["return",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["reviewed",{"_index":1088,"title":{},"body":{"contributing.html":{}}}],["reviewer",{"_index":952,"title":{},"body":{"contributing.html":{}}}],["rewrite",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":1041,"title":{},"body":{"contributing.html":{}}}],["rimraf",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["ru",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":1194,"title":{},"body":{"index.html":{}}}],["running",{"_index":97,"title":{},"body":{"injectables/AppService.html":{}}}],["russian",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["rxjs",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["scenario",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":945,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":1060,"title":{},"body":{"contributing.html":{}}}],["se",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["second",{"_index":951,"title":{},"body":{"contributing.html":{}}}],["secret",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["sections",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["seeds",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":440,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["sem",{"_index":250,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["semantic",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["semver",{"_index":798,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["senha",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["senhas",{"_index":644,"title":{},"body":{"injectables/UserService.html":{}}}],["separately",{"_index":1103,"title":{},"body":{"contributing.html":{}}}],["ser",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["serve",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":96,"title":{},"body":{"injectables/AppService.html":{}}}],["server.gitinstallation",{"_index":1190,"title":{},"body":{"index.html":{}}}],["server.up.railway.app/api",{"_index":1187,"title":{},"body":{"index.html":{}}}],["setting",{"_index":1028,"title":{},"body":{"contributing.html":{}}}],["sexual",{"_index":978,"title":{},"body":{"contributing.html":{}}}],["sexualized",{"_index":1004,"title":{},"body":{"contributing.html":{}}}],["showing",{"_index":998,"title":{},"body":{"contributing.html":{}}}],["sign",{"_index":947,"title":{},"body":{"contributing.html":{}}}],["signoptions",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["simplified",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["site",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":967,"title":{},"body":{"contributing.html":{}}}],["slovak",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["social",{"_index":1069,"title":{},"body":{"contributing.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["space",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["spaces",{"_index":1063,"title":{},"body":{"contributing.html":{}}}],["specific",{"_index":1100,"title":{},"body":{"contributing.html":{}}}],["spelling",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["src/.../01",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../02",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../03",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../handle",{"_index":1179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:21",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":91,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":364,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":358,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":361,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:19",{"_index":362,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":335,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":337,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":401,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":206,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":372,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts:10",{"_index":382,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:11",{"_index":380,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:6",{"_index":378,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:7",{"_index":383,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:8",{"_index":381,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:9",{"_index":377,"title":{},"body":{"classes/Order.html":{}}}],["src/order/order.controller.ts",{"_index":387,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:20",{"_index":393,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:28",{"_index":397,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:36",{"_index":400,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":417,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":419,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:11",{"_index":422,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:65",{"_index":424,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:8",{"_index":420,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:88",{"_index":425,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma/prisma.module",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":449,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":454,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":460,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":462,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/seed.ts",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/01",{"_index":1139,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/02",{"_index":1142,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/03",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/product/dto/create",{"_index":267,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":582,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity",{"_index":384,"title":{},"body":{"classes/Order.html":{}}}],["src/product/entities/product.entity.ts",{"_index":467,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts:2",{"_index":470,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:3",{"_index":472,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:4",{"_index":469,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:5",{"_index":473,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:6",{"_index":471,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:7",{"_index":468,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:8",{"_index":474,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":476,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:30",{"_index":479,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:38",{"_index":485,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:46",{"_index":486,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:54",{"_index":491,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:63",{"_index":483,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":512,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":514,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:12",{"_index":521,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:16",{"_index":523,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:26",{"_index":524,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:30",{"_index":518,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:36",{"_index":525,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:49",{"_index":520,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:9",{"_index":516,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/table/dto/create",{"_index":295,"title":{},"body":{"classes/CreateTableDto.html":{},"coverage.html":{}}}],["src/table/dto/update",{"_index":585,"title":{},"body":{"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["src/table/entities/table.entity",{"_index":385,"title":{},"body":{"classes/Order.html":{}}}],["src/table/entities/table.entity.ts",{"_index":538,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/table/entities/table.entity.ts:2",{"_index":540,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:3",{"_index":541,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:4",{"_index":539,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:5",{"_index":542,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table.controller.ts",{"_index":544,"title":{},"body":{"controllers/TableController.html":{},"coverage.html":{}}}],["src/table/table.controller.ts:31",{"_index":549,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:39",{"_index":550,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:47",{"_index":545,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:55",{"_index":552,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:64",{"_index":546,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.module.ts",{"_index":567,"title":{},"body":{"modules/TableModule.html":{}}}],["src/table/table.service.ts",{"_index":569,"title":{},"body":{"injectables/TableService.html":{},"coverage.html":{}}}],["src/table/table.service.ts:12",{"_index":573,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:16",{"_index":574,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:26",{"_index":575,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:30",{"_index":571,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:36",{"_index":576,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:49",{"_index":572,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:9",{"_index":570,"title":{},"body":{"injectables/TableService.html":{}}}],["src/user/dto/create",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":588,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{}}}],["src/user/entities/user.entity.ts",{"_index":591,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":593,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":596,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":595,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":597,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":594,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":592,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":598,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":600,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:28",{"_index":602,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":606,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:48",{"_index":607,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:58",{"_index":608,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:69",{"_index":604,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":622,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":624,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:15",{"_index":636,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":626,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":629,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":630,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":631,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:50",{"_index":627,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:70",{"_index":632,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:96",{"_index":628,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handle",{"_index":428,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["standard",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["standardized",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":980,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":732,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["start:dev",{"_index":1197,"title":{},"body":{"index.html":{}}}],["start:prodlicense",{"_index":1199,"title":{},"body":{"index.html":{}}}],["started",{"_index":655,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"todo.html":{}},"body":{}}],["statements",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["stay",{"_index":1203,"title":{},"body":{"index.html":{}}}],["stop",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["strategy",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":93,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["style",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":691,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["such",{"_index":1018,"title":{},"body":{"contributing.html":{}}}],["summary",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1207,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1208,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1171,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["swedish",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["são",{"_index":646,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":374,"title":{"classes/Table.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.controller",{"_index":568,"title":{},"body":{"modules/TableModule.html":{}}}],["table.dto",{"_index":553,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{}}}],["table.dto.ts",{"_index":296,"title":{},"body":{"classes/CreateTableDto.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["table.dto.ts:11",{"_index":298,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["table.service",{"_index":556,"title":{},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{}}}],["table.ts",{"_index":1145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/table.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["tablecontroller",{"_index":543,"title":{"controllers/TableController.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["tablemodule",{"_index":74,"title":{"modules/TableModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tablenumber",{"_index":210,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["tables",{"_index":1146,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tableservice",{"_index":555,"title":{"injectables/TableService.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":1034,"title":{},"body":{"contributing.html":{}}}],["tallesl",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["task",{"_index":1233,"title":{},"body":{"todo.html":{}}}],["team",{"_index":1085,"title":{},"body":{"contributing.html":{}}}],["temporarily",{"_index":1052,"title":{},"body":{"contributing.html":{}}}],["temporary",{"_index":1107,"title":{},"body":{"contributing.html":{}}}],["things",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["this.$connect",{"_index":464,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":465,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus(baseurl",{"_index":60,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.findbyid(id",{"_index":533,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["this.jwtservice.sign",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.create(user.id",{"_index":409,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":410,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":413,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma.order",{"_index":439,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":442,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":444,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.product",{"_index":536,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.create",{"_index":534,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.delete",{"_index":537,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findmany",{"_index":528,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique",{"_index":530,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.table",{"_index":580,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.create",{"_index":579,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.delete",{"_index":581,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findmany",{"_index":577,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findunique",{"_index":578,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.user",{"_index":650,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":653,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":639,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.productservice.create(createproductdto",{"_index":499,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.delete(id",{"_index":508,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":500,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":501,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":504,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.tableservice.create(dto",{"_index":561,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.delete(id",{"_index":563,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findall",{"_index":559,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findone(id",{"_index":560,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.update(id",{"_index":562,"title":{},"body":{"controllers/TableController.html":{}}}],["this.userselect",{"_index":640,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":613,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":618,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":615,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":616,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":617,"title":{},"body":{"controllers/UserController.html":{}}}],["threatening",{"_index":1057,"title":{},"body":{"contributing.html":{}}}],["throughout",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["tianshuo",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["todas",{"_index":547,"title":{},"body":{"controllers/TableController.html":{}}}],["todo",{"_index":1217,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["todo.md",{"_index":1218,"title":{},"body":{"todo.html":{}}}],["todos",{"_index":395,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["token",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["token_gerado_automaticamente",{"_index":368,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["touch",{"_index":1204,"title":{},"body":{"index.html":{}}}],["towards",{"_index":1000,"title":{},"body":{"contributing.html":{}}}],["traditional",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["transformer",{"_index":234,"title":{},"body":{"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["translation",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["translations",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["trolling",{"_index":1009,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":243,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["true})@type(undefined)@apiproperty({description",{"_index":213,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["turkish",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":948,"title":{},"body":{"contributing.html":{}}}],["tylerfortune8",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["typos",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["ukrainian",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["um",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["uma",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/TableController.html":{}}}],["unacceptable",{"_index":1002,"title":{},"body":{"contributing.html":{}}}],["unauthorizedexception",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('usuário",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":222,"title":{},"body":{"classes/CreateOrderDto.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1200,"title":{},"body":{"index.html":{}}}],["understand",{"_index":1222,"title":{},"body":{"todo.html":{}}}],["unicorns",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":1215,"title":{},"body":{"properties.html":{}}}],["unreleased",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["unwelcome",{"_index":1006,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":477,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":503,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":487,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":375,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updateproductdto",{"_index":488,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updatetabledto",{"_index":551,"title":{"classes/UpdateTableDto.html":{}},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":587,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["url",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"changelog.html":{}}}],["usage",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["usando",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["use",{"_index":765,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["useful",{"_index":938,"title":{},"body":{"contributing.html":{}}}],["useguards",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":115,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":623,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{}}}],["user.decorator.ts",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":589,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":322,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":318,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":329,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":610,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.ts",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user/user.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":599,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":423,"title":{},"body":{"injectables/OrderService.html":{}}}],["usermodule",{"_index":75,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":1141,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userselect",{"_index":625,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":609,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":733,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["usuário",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UserController.html":{}}}],["usuários",{"_index":614,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários'})@useguards(undefined)@apibearerauth",{"_index":605,"title":{},"body":{"controllers/UserController.html":{}}}],["utilizado",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["uuid",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["valida",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":336,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":237,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validatenested({each",{"_index":212,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validator",{"_index":238,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":635,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":935,"title":{"miscellaneous/variables.html":{}},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":676,"title":{},"body":{"changelog.html":{},"contributing.html":{},"properties.html":{}}}],["versioning",{"_index":666,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["versions",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":912,"title":{},"body":{"contributing.html":{}}}],["view",{"_index":1219,"title":{},"body":{"todo.html":{}}}],["viewpoints",{"_index":990,"title":{},"body":{"contributing.html":{}}}],["visual",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["visualizar",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["void",{"_index":484,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["vs",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["watch",{"_index":1195,"title":{},"body":{"index.html":{}}}],["way",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1224,"title":{},"body":{"todo.html":{}}}],["webysther",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["welcoming",{"_index":956,"title":{},"body":{"contributing.html":{}}}],["wiki",{"_index":1046,"title":{},"body":{"contributing.html":{}}}],["wish",{"_index":911,"title":{},"body":{"contributing.html":{}}}],["within",{"_index":1062,"title":{},"body":{"contributing.html":{}}}],["without",{"_index":1022,"title":{},"body":{"contributing.html":{}}}],["work",{"_index":1223,"title":{},"body":{"todo.html":{}}}],["world",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["writes",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["yanked",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["year",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":325,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":324,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zapashcanon",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["zeliosariex",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:21\n                \n            \n\n\n            \n                \n                    Recebe uma requisição GET e retorna um objeto de status\nda aplicação com a URL de documentação\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de Request do Express\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Objeto de status da aplicação\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { AppService } from './app.service';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Recebe uma requisição GET e retorna um objeto de status\n   * da aplicação com a URL de documentação\n   * @param req Objeto de Request do Express\n   * @returns Objeto de status da aplicação\n   */\n  @Get()\n  @ApiOperation({\n    summary: 'Visualizar status da aplicação',\n  })\n  getAppStatus(@Req() req: Request) {\n    const baseUrl = req.protocol + '://' + req.get('host');\n    return this.appService.getAppStatus(baseUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            TableModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TableModule } from './table/table.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ProductModule } from './product/product.module';\nimport { UserModule } from './user/user.module';\nimport { OrderModule } from './order/order.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [TableModule, PrismaModule, ProductModule, UserModule, OrderModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(baseUrl: string) {\n    return {\n      status: 'Server is running! 🚀',\n      docs: baseUrl + '/api',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Retorna o usuário autenticado no momento'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um token de autenticação',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Retorna o usuário autenticado no momento',\n  })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const { nickname, password } = loginDto;\n\n    // Procura e checa se o user existe, usando o nickname\n    const user = await this.prisma.user.findUnique({ where: { nickname } });\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    // Valida se a senha informada é correta\n    const isHashValid = await bcrypt.compare(password, user.password);\n\n    if (!isHashValid) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ nickname }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                products\n                            \n                            \n                                tableNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderProductDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@ApiProperty({description: 'Lista com os IDs dos produtos que estão no pedido', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Número da mesa que está realizando o pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, IsPositive, ValidateNested } from 'class-validator';\nimport { CreateOrderProductDto } from './create-order-product.dto';\n\nexport class CreateOrderDto {\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Número da mesa que está realizando o pedido',\n    example: 1,\n  })\n  tableNumber: number;\n\n  @ValidateNested({\n    each: true,\n  })\n  @Type(() => CreateOrderProductDto)\n  @ApiProperty({\n    description: 'Lista com os IDs dos produtos que estão no pedido',\n    type: [CreateOrderProductDto],\n  })\n  products: CreateOrderProductDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderProductDto.html":{"url":"classes/CreateOrderProductDto.html","title":"class - CreateOrderProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Observações do produto', example: 'Sem cebola'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'ID do produto', example: '04f66779-bcfa-4c5c-a140-f234138890f3'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Quantidade de itens no pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsPositive, IsString, IsUUID } from 'class-validator';\n\nexport class CreateOrderProductDto {\n  @IsUUID()\n  @ApiProperty({\n    description: 'ID do produto',\n    example: '04f66779-bcfa-4c5c-a140-f234138890f3',\n  })\n  productId: string;\n\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Quantidade de itens no pedido',\n    example: 1,\n  })\n  quantity: number;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Observações do produto',\n    example: 'Sem cebola',\n  })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Descrição do produto', example: 'Queijo mussarela fino do fino, massa fina e borda recheada de catupiry'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem do produto', example: 'https://i.imgur.com/hNE75Iw.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do produto', example: 'Pizza de Mussarela'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Preço do produto', example: 12.34})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString, IsUrl } from 'class-validator';\n\nexport class CreateProductDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do produto',\n    example: 'Pizza de Mussarela',\n  })\n  name: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Descrição do produto',\n    example:\n      'Queijo mussarela fino do fino, massa fina e borda recheada de catupiry',\n  })\n  description: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Preço do produto',\n    example: 12.34,\n  })\n  price: number;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem do produto',\n    example: 'https://i.imgur.com/hNE75Iw.png',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableDto.html":{"url":"classes/CreateTableDto.html","title":"class - CreateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/create-table.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()@ApiProperty({description: 'O número da mesa', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/dto/create-table.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsPositive } from 'class-validator';\n\nexport class CreateTableDto {\n  @IsNumber()\n  @IsPositive()\n  @ApiProperty({\n    description: 'O número da mesa',\n    example: 1,\n  })\n  number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A confirmação da senha deve ser igual a senha', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem de perfil do usuário', example: 'https://avatars.githubusercontent.com/u/7906171'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do usuário. Apenas para exibição', example: 'Dener Batista'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome de usuário. Utilizado no login. Deve ser único', example: 'denerbatista'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca'})@ApiProperty({description: 'Senha do usuário para login', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsUrl, Matches, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome de usuário. Utilizado no login. Deve ser único',\n    example: 'denerbatista',\n  })\n  nickname: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do usuário. Apenas para exibição',\n    example: 'Dener Batista',\n  })\n  name: string;\n\n  @IsString()\n  @MinLength(6)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Senha muito fraca',\n  })\n  @ApiProperty({\n    description: 'Senha do usuário para login',\n    example: 'Abcd@1234',\n  })\n  password: string;\n\n  @ApiProperty({\n    description: 'A confirmação da senha deve ser igual a senha',\n    example: 'Abcd@1234',\n  })\n  confirmPassword: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem de perfil do usuário',\n    example: 'https://avatars.githubusercontent.com/u/7906171',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { nickname: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { nickname: payload.nickname },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Usuário não existe ou não está autenticado',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Nickname do usuário', example: 'paulosalvatore'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nickname do usuário',\n    example: 'paulosalvatore',\n  })\n  nickname: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'Abcd@1234',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo login', example: 'TOKEN_GERADO_AUTOMATICAMENTE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo login',\n    example: 'TOKEN_GERADO_AUTOMATICAMENTE',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                            \n                                    Optional\n                                table\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Table\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Product } from 'src/product/entities/product.entity';\nimport { Table } from 'src/table/entities/table.entity';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class Order {\n  id?: string;\n  user?: User;\n  table?: Table;\n  createdAt?: Date;\n  updatedAt?: Date;\n  products?: Product[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um pedido'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os pedidos'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um pedido pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { OrderService } from './order.service';\n\n@ApiTags('order')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('order')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um pedido',\n  })\n  create(@LoggedUser() user: User, @Body() createOrderDto: CreateOrderDto) {\n    return this.orderService.create(user.id, createOrderDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os pedidos',\n  })\n  findAll() {\n    return this.orderService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um pedido pelo ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_OrderModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { OrderController } from './order.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [OrderController],\n  providers: [OrderService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(userId: string, createOrderDto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateOrderDto } from './dto/create-order.dto';\n\n@Injectable()\nexport class OrderService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(userId: string, createOrderDto: CreateOrderDto) {\n    const data: Prisma.OrderCreateInput = {\n      user: {\n        connect: {\n          id: userId,\n        },\n      },\n      table: {\n        connect: {\n          number: createOrderDto.tableNumber,\n        },\n      },\n      products: {\n        createMany: {\n          data: createOrderDto.products.map((createOrderProductDto) => ({\n            productId: createOrderProductDto.productId,\n            quantity: createOrderProductDto.quantity,\n            description: createOrderProductDto.description,\n          })),\n        },\n      },\n    };\n\n    return this.prisma.order\n      .create({\n        data,\n        select: {\n          id: true,\n          table: {\n            select: {\n              number: true,\n            },\n          },\n          user: {\n            select: {\n              name: true,\n            },\n          },\n          products: {\n            select: {\n              quantity: true,\n              description: true,\n              product: {\n                select: {\n                  name: true,\n                },\n              },\n            },\n          },\n        },\n      })\n      .catch(handleError);\n  }\n\n  findAll() {\n    return this.prisma.order.findMany({\n      select: {\n        id: true,\n        table: {\n          select: {\n            number: true,\n          },\n        },\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        _count: {\n          select: {\n            products: true,\n          },\n        },\n      },\n    });\n  }\n\n  findOne(id: string) {\n    return this.prisma.order.findUnique({\n      where: { id },\n      include: {\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        table: {\n          select: {\n            number: true,\n          },\n        },\n        products: {\n          select: {\n            product: {\n              select: {\n                id: true,\n                name: true,\n                price: true,\n                image: true,\n                description: true,\n              },\n            },\n          },\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService], //NOVO CÓDIGO\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entities/product.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {\n  id?: string;\n  name: string;\n  description: string;\n  price: number;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um produto'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os produtos'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n} from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('product')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um produto',\n  })\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productService.create(createProductDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os produtos',\n  })\n  findAll() {\n    return this.productService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um produto pelo ID',\n  })\n  findOne(@Param('id') id: string) {\n    return this.productService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um produto pelo ID',\n  })\n  update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productService.update(id, updateProductDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um produto pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    this.productService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [ProductController],\n  providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product } from './entities/product.entity';\n\n@Injectable()\nexport class ProductService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.product.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.product.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(dto: CreateProductDto): Promise {\n    const data: Product = { ...dto };\n\n    return this.prisma.product.create({ data }).catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateProductDto): Promise {\n    await this.findById(id);\n\n    const data: Partial = { ...dto };\n\n    return this.prisma.product\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.product.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/entities/table.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                number\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Table {\n  id?: string;\n  number: number;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TableController.html":{"url":"controllers/TableController.html","title":"controller - TableController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TableController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                table\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover uma mesa pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todas as mesas'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar uma mesa pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\nimport { TableService } from './table.service';\n\n@ApiTags('table')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('table')\nexport class TableController {\n  constructor(private readonly tableService: TableService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todas as mesas',\n  })\n  findAll(): Promise {\n    return this.tableService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar uma mesa',\n  })\n  findOne(@Param('id') id: string): Promise {\n    return this.tableService.findOne(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar uma mesa',\n  })\n  create(@Body() dto: CreateTableDto): Promise {\n    return this.tableService.create(dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar uma mesa pelo ID',\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateTableDto): Promise {\n    return this.tableService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover uma mesa pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    this.tableService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TableModule\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TableModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/table/table.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TableService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TableController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { TableController } from './table.controller';\nimport { TableService } from './table.service';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [TableController],\n  providers: [TableService],\n})\nexport class TableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableService.html":{"url":"injectables/TableService.html","title":"injectable - TableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/table/table.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\n\n@Injectable()\nexport class TableService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.table.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.table.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(dto: CreateTableDto): Promise {\n    const data: Table = { ...dto };\n\n    return this.prisma.table.create({ data }).catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateTableDto): Promise {\n    await this.findById(id);\n\n    const data: Partial = { ...dto };\n\n    return this.prisma.table\n      .update({\n        where: { id },\n        data,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.table.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTableDto.html":{"url":"classes/UpdateTableDto.html","title":"class - UpdateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/update-table.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTableDto } from './create-table.dto';\n\nexport class UpdateTableDto extends PartialType(CreateTableDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  nickname: string;\n  name: string;\n  password: string;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um usuário pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os usuários'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um usuário pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um usuário pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um usuário',\n  })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os usuários',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um usuário pelo ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um usuário pelo ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um usuário pelo ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  delete(@Param('id') id: string) {\n    this.userService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UserService {\n  private userSelect = {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.user.findMany({\n      select: this.userSelect,\n    });\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.user.findUnique({\n      where: { id },\n      select: this.userSelect,\n    });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  async create(dto: CreateUserDto): Promise {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    delete dto.confirmPassword;\n\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10),\n    };\n\n    return this.prisma.user\n      .create({\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateUserDto): Promise {\n    await this.findById(id);\n\n    if (dto.password) {\n      if (dto.password != dto.confirmPassword) {\n        throw new BadRequestException('As senhas informadas não são iguais.');\n      }\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Partial = { ...dto };\n\n    if (data.password) {\n      data.password = await bcrypt.hash(data.password, 10);\n    }\n\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.user.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog, and this project adheres\nto Semantic Versioning.\nUnreleased\n1.0.0 - 2017-06-20\nAdded\n\nNew visual identity by @tylerfortune8.\nVersion navigation.\nLinks to latest released version in previous versions.\n\"Why keep a changelog?\" section.\n\"Who needs a changelog?\" section.\n\"How do I make a changelog?\" section.\n\"Frequently Asked Questions\" section.\nNew \"Guiding Principles\" sub-section to \"How do I make a changelog?\".\nSimplified and Traditional Chinese translations from @tianshuo.\nGerman translation from @mpbzh & @Art4.\nItalian translation from @azkidenz.\nSwedish translation from @magol.\nTurkish translation from @karalamalar.\nFrench translation from @zapashcanon.\nBrazilian Portugese translation from @Webysther.\nPolish translation from @amielucha & @m-aciek.\nRussian translation from @aishek.\nCzech translation from @h4vry.\nSlovak translation from @jkostolansky.\nKorean translation from @pierceh89.\nCroatian translation from @porx.\nPersian translation from @Hameds.\nUkrainian translation from @osadchyi-s.\n\nChanged\n\nStart using \"changelog\" over \"change log\" since it's the common usage.\nStart versioning based on the current English version at 0.3.0 to help translation authors keep things up-to-date.\nRewrite \"What makes unicorns cry?\" section.\nRewrite \"Ignoring Deprecations\" sub-section to clarify the ideal scenario.\nImprove \"Commit log diffs\" sub-section to further argument against them.\nMerge \"Why can’t people just use a git log diff?\" with \"Commit log diffs\"\nFix typos in Simplified Chinese and Traditional Chinese translations.\nFix typos in Brazilian Portuguese translation.\nFix typos in Turkish translation.\nFix typos in Czech translation.\nFix typos in Swedish translation.\nImprove phrasing in French translation.\nFix phrasing and spelling in German translation.\n\nRemoved\n\nSection about \"changelog\" vs \"CHANGELOG\".\n\n0.3.0 - 2015-12-03\nAdded\n\nRU translation from @aishek.\npt-BR translation from @tallesl.\nes-ES translation from @ZeliosAriex.\n\n0.2.0 - 2015-10-06\nChanged\n\nRemove exclusionary mentions of \"open source\" since this project can benefit both \"open\" and \"closed\" source projects\nequally.\n\n0.1.0 - 2015-10-06\nAdded\n\nAnswer \"Should you ever rewrite a change log?\".\n\nChanged\n\nImprove argument against commit logs.\nStart following SemVer properly.\n\n0.0.8 - 2015-02-17\nChanged\n\nUpdate year to match in every README example.\nReluctantly stop making fun of Brits only, since most of the world writes dates in a strange way.\n\nFixed\n\nFix typos in recent README changes.\nUpdate outdated unreleased diff link.\n\n0.0.7 - 2015-02-16\nAdded\n\nLink, and make it obvious that date format is ISO 8601.\n\nChanged\n\nClarified the section on \"Is there a standard change log format?\".\n\nFixed\n\nFix Markdown links to tag comparison URL with footnote-style links.\n\n0.0.6 - 2014-12-12\nAdded\n\nREADME section on \"yanked\" releases.\n\n0.0.5 - 2014-08-09\nAdded\n\nMarkdown links to version tags on release headings.\nUnreleased section to gather unreleased changes and encourage note keeping prior to releases.\n\n0.0.4 - 2014-08-09\nAdded\n\nBetter explanation of the difference between the file (\"CHANGELOG\")\nand its function \"the change log\".\n\nChanged\n\nRefer to a \"change log\" instead of a \"CHANGELOG\" throughout the site to differentiate between the file and the purpose\nof the file — the logging of changes.\n\nRemoved\n\nRemove empty sections from CHANGELOG, they occupy too much space and create too much noise in the file. People will\nhave to assume that the missing sections were intentionally left out because they contained no notable changes.\n\n0.0.3 - 2014-08-09\nAdded\n\n\"Why should I care?\" section mentioning The Changelog podcast.\n\n0.0.2 - 2014-07-10\nAdded\n\nExplanation of the recommended reverse chronological release ordering.\n\n0.0.1 - 2014-05-31\nAdded\n\nThis CHANGELOG file to hopefully serve as an evolving example of a standardized open source project CHANGELOG.\nCNAME file to enable GitHub Pages custom domain\nREADME now contains answers to common questions about CHANGELOGs\nGood examples and basic guidelines, including proper date formatting.\nCounter-examples: \"What makes unicorns cry?\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing\nWhen contributing to this repository, please first discuss the change you wish to make via issue, email, or any other\nmethod with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\nPull Request Process\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a build.\nUpdate the README.md with details of changes to the interface, this includes new environment variables, exposed\nports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this Pull Request would\nrepresent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have\npermission to do that, you may request the second reviewer to merge it for you.\n\nCode of Conduct\nOur Pledge\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making\nparticipation in our project and our community a harassment-free experience for everyone, regardless of age, body size,\ndisability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\nOur Standards\nExamples of behavior that contributes to creating a positive environment include:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or advances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic address, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\nOur Responsibilities\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take\nappropriate and fair corrective action in response to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits,\nissues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any\ncontributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\nScope\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the\nproject or its community. Examples of representing a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed representative at an online or offline\nevent. Representation of a project may be further defined and clarified by project maintainers.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team\nat [INSERT EMAIL ADDRESS]. All complaints will be reviewed and investigated and will result in a response that is deemed\nnecessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to\nthe reporter of an incident. Further details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent\nrepercussions as determined by other members of the project's leadership.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4, available\nat http://contributor-covenant.org/version/1/4\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order-product.dto.ts\n            \n            class\n            CreateOrderProductDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            seeds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-product.ts\n            \n            variable\n            product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-product.ts\n            \n            variable\n            products\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-table.ts\n            \n            variable\n            table\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-table.ts\n            \n            variable\n            tables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/table/dto/create-table.dto.ts\n            \n            class\n            CreateTableDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/table/dto/update-table.dto.ts\n            \n            class\n            UpdateTableDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/table/entities/table.entity.ts\n            \n            class\n            Table\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/table/table.controller.ts\n            \n            controller\n            TableController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/table/table.service.ts\n            \n            injectable\n            TableService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/handle-error.util.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^4.0.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n        \n            uuid : ^8.3.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle-error.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n\nDescription\nApplication that automates the ordering process of a pizzeria.\nSwagger docs\nhttps://pizza-fresh-server.up.railway.app/api\nClone repository\n$ git clone https://github.com/denerbatista/pizza-fresh-server.gitInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodLicense\nThis project is under the MIT license\nStay touch\n  \n    \n  \n  \n    \n  \n\n\n\n\n  Made with ❤️ by Dener Batista 👋🏽\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nExample of TODO.md\nThis is an example of TODO.md\nView the raw content of this file to understand the format.\nTodo\n\n Work on the website ~3d #feat @john 2020-03-20\n Fix the homepage ~1d #bug @jane\n Sub-task or description\n\n\n\nIn Progress\n\n Work on Github Repo [JIRA-345]\n\nDone ✓\n\n Create my first TODO.md\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                        \n                            prisma   (src/.../seed.ts)\n                        \n                        \n                            product   (src/.../02-product.ts)\n                        \n                        \n                            products   (src/.../02-product.ts)\n                        \n                        \n                            seeds   (src/.../seed.ts)\n                        \n                        \n                            table   (src/.../03-table.ts)\n                        \n                        \n                            tables   (src/.../03-table.ts)\n                        \n                        \n                            user   (src/.../01-user.ts)\n                        \n                        \n                            users   (src/.../01-user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seeds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.entries(seed)\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/02-product.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(products)) {\n    await prisma.product.upsert({\n      where: { name: obj.name },\n      update: {},\n      create: {\n        ...obj,\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.ProductCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'Pizza de Mussarela',\n    description:\n      'Queijo mussarela fino do fino, massa fina e borda recheada de catupiry',\n    price: 12.34,\n    image: 'https://i.imgur.com/hNE75Iw.png',\n  },\n  {\n    name: 'Pizza de Calabresa',\n    description:\n      'Queijo mussarela fino do fino, massa fina e borda recheada de catupiry',\n    price: 12.34,\n    image: 'https://i.imgur.com/hNE75Iw.png',\n  },\n  {\n    name: 'Pizza de Frango com Catupiry',\n    description:\n      'Queijo mussarela fino do fino, massa fina e borda recheada de catupiry',\n    price: 12.34,\n    image: 'https://i.imgur.com/hNE75Iw.png',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/03-table.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(tables)) {\n    await prisma.table.upsert({\n      where: { number: obj.number },\n      update: {},\n      create: {\n        ...obj,\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tables\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.TableCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    number: 1,\n  },\n  {\n    number: 2,\n  },\n  {\n    number: 3,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/01-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(users)) {\n    await prisma.user.upsert({\n      where: { nickname: obj.nickname },\n      update: {},\n      create: {\n        ...obj,\n        password: await bcrypt.hash(obj.password, 10),\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.UserCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    nickname: 'denerbatista',\n    name: 'Dener BAtista',\n    password: 'Abcd@1234',\n    image: 'https://avatars.githubusercontent.com/u/7906171',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
